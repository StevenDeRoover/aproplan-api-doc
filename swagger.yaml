swagger: '2.0'
info:
  description: This is a sample of APROPLAN API.
  version: 1.7.0
  title: APROPLAN API
  termsOfService: 'http://swagger.io/terms/'
  contact:
    name: APROPLAN support
    email: support@aproplan.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: api.aproplan.com
basePath: /rest
tags:
  - name: Login
    description: necessary method to identify a user
  - name: Projects
    description: Everything about the Project
  - name: Documents
    description: Everything about the Document
  - name: Lists
    description: Everything about the lists
  - name: Annotations
    description: Common objects for Points and Forms
  - name: Points
    description: Everything about the Points
  - name: Forms
    description: Everything about Forms
  - name: Form Synchronization
    description: Everything about Forms
  - name: Form Templates
    description: Everything about Form Templates
  - name: Companies
    description: Everything about the managed companies
  - name: Reports
    description: Everything about the reports
schemes:
  - https
parameters:
  tokenParam:
    name: t
    in: query
    description: the token to call the api method
    required: true
    type: string
  versionParam:
    name: v
    in: query
    description: the version of the API V1 to use
    required: true
    type: string
  dateFormatParam:
    name: dateformat
    in: query
    description: to specify how date must be formatted
    required: false
    type: string
    enum:
      - microsoft
      - iso
    default: microsoft
  requesterParam:
    name: requesterid
    in: query
    required: true
    type: string
    description: >-
      this is the token you received from aproplan to identify as a user of the
      APROPLAN API
  filterParam:
    in: query
    name: filter
    description: >-
      This is the filter to apply to retrieve the list of entities available for
      the current user
    type: string
  pathtoloadParam:
    in: query
    name: pathtoload
    description: >-
      This is the pathtoload to know which related entities we need to retrieve
      in the call
    type: string
  sortorderParam:
    in: query
    name: sortorder
    description: >-
      Specify the property on which the list of data can sorted. Each property
      must be separated by comma. Depending of the kind of entity to load, the
      properties used for sort are specific.
    type: string
  loadfkParam:
    in: query
    name: isloadfkidproperty
    description: >-
      "To specify if it is necessary to load Id of related object. Example: You
      want to load Country with to load the object Language but you want at
      least to have the Language object created with only the Id property
      (Country.Language.Id).  In that case, you need to specify this parameter
      to true    "
    type: string
  requestedBlockSizeParam:
    in: query
    name: requestedBlockSize
    type: number
  timestampParam:
    in: query
    name: timestamp
    type: string
    format: date-time
  formatParam:
    in: query
    name: format
    type: string
    enum:
      - json
      - excel
    description: >-
      to specify in which format the output must be generated. By default, it is
      json
  idsParam:
    in: query
    name: ids
    type: string
    description: this is the list of entity's ids separated by comma
paths:
  /loginsecure:
    post:
      operationId: loginSecure
      tags:
        - Login
      summary: 'to identify a user and then, to be able to make other call in the api'
      parameters:
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          schema:
            $ref: '#/definitions/AliasPass'
      responses:
        '200':
          description: >-
            Successful operation returning a new TokenInfo object with the new
            valid token to use
          schema:
            $ref: '#/definitions/TokenInfo'
  /renewtoken:
    get:
      operationId: renewToken
      tags:
        - Login
      summary: >-
        Permit to request a new token to identify the user before the current
        one becomes invalidate.
      parameters:
        - $ref: '#/parameters/versionParam'
        - in: query
          name: t
          description: >-
            the current valid token received at the login or a previous renew
            token
          type: string
      responses:
        '200':
          description: >-
            Successful operation returning a new TokenInfo object with the new
            valid token to use
          schema:
            $ref: '#/definitions/TokenInfo'
  /users:
    post:
      operationId: createUser
      tags:
        - Login
      summary: Create an account in APROPLAN
      description: >-
        To create an new user in aproplan, it is necessary to send the user
        object with at least the following properties of User object * Id *
        Alias * DisplayName * Person
          * Id
          * Code
          * Name
          * LanguageCode
          * Country
            * Id
        * LanguageCode
      parameters:
        - $ref: '#/parameters/versionParam'
        - in: body
          name: body
          description: 'Need an object with 2 properties: User and Pass'
          schema:
            $ref: '#/definitions/UserPass'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/User'
  /countrycount:
    get:
      operationId: getCountryCount
      tags:
        - IdentFiles
      summary: Return the count of country available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of country corresponding
            to the queries parameters
          schema:
            type: number
  /countries:
    get:
      operationId: getCountry
      tags:
        - IdentFiles
      summary: Return the list of country available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of country corresponding to
            the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/Country'
    post:
      operationId: postCountry
      tags:
        - IdentFiles
      summary: To create new country in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of country to create through the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Country'
      responses:
        '200':
          description: Successful operation to create new country array in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Country'
    put:
      operationId: putCountry
      tags:
        - IdentFiles
      summary: To update country in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of country to update in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Country'
      responses:
        '200':
          description: Successful operation to update array of country in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Country'
    delete:
      operationId: deleteCountry
      tags:
        - IdentFiles
      summary: To delete items of country in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of country id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of country
            corresponding to ids in parameters are deleted from the cloud
          schema:
            type: string
            example: success
  /countriesids:
    get:
      operationId: getCountryIds
      tags:
        - IdentFiles
      summary: >-
        Return the list of id corresponding to the country available to the
        current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of country
            corresponding to the queries parameters
          schema:
            type: array
            items:
              type: string
  /languagecount:
    get:
      operationId: getLanguageCount
      tags:
        - IdentFiles
      summary: Return the count of language available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of language corresponding
            to the queries parameters
          schema:
            type: number
  /languages:
    get:
      operationId: getLanguage
      tags:
        - IdentFiles
      summary: Return the list of language available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of language corresponding
            to the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/Language'
    post:
      operationId: postLanguage
      tags:
        - IdentFiles
      summary: To create new language in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of language to create through the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Language'
      responses:
        '200':
          description: Successful operation to create new language array in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Language'
    put:
      operationId: putLanguage
      tags:
        - IdentFiles
      summary: To update language in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of language to update in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Language'
      responses:
        '200':
          description: Successful operation to update array of language in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Language'
    delete:
      operationId: deleteLanguage
      tags:
        - IdentFiles
      summary: To delete items of language in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of language id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of language
            corresponding to ids in parameters are deleted from the cloud
          schema:
            type: string
            example: success
  /languagesids:
    get:
      operationId: getLanguageIds
      tags:
        - IdentFiles
      summary: >-
        Return the list of id corresponding to the language available to the
        current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of language
            corresponding to the queries parameters
          schema:
            type: array
            items:
              type: string
  /professioncount:
    get:
      operationId: getProfessionCount
      tags:
        - IdentFiles
      summary: Return the count of profession available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of profession
            corresponding to the queries parameters
          schema:
            type: number
  /professions:
    get:
      operationId: getProfession
      tags:
        - IdentFiles
      summary: Return the list of profession available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of profession corresponding
            to the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/Profession'
    post:
      operationId: postProfession
      tags:
        - IdentFiles
      summary: To create new profession in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of profession to create through the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Profession'
      responses:
        '200':
          description: Successful operation to create new profession array in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Profession'
    put:
      operationId: putProfession
      tags:
        - IdentFiles
      summary: To update profession in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of profession to update in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Profession'
      responses:
        '200':
          description: Successful operation to update array of profession in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Profession'
    delete:
      operationId: deleteProfession
      tags:
        - IdentFiles
      summary: To delete items of profession in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of profession id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of profession
            corresponding to ids in parameters are deleted from the cloud
          schema:
            type: string
            example: success
  /professionsids:
    get:
      operationId: getProfessionIds
      tags:
        - IdentFiles
      summary: >-
        Return the list of id corresponding to the profession available to the
        current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of profession
            corresponding to the queries parameters
          schema:
            type: array
            items:
              type: string
  /phonecount:
    get:
      operationId: getPhoneCount
      tags:
        - Actors
      summary: Return the count of phone available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of phone corresponding to
            the queries parameters
          schema:
            type: number
  /phones:
    get:
      operationId: getPhone
      tags:
        - Actors
      summary: Return the list of phone available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of phone corresponding to
            the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/Phone'
    post:
      operationId: postPhone
      tags:
        - Actors
      summary: To create new phone in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of phone to create through the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Phone'
      responses:
        '200':
          description: Successful operation to create new phone array in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Phone'
    put:
      operationId: putPhone
      tags:
        - Actors
      summary: To update phone in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of phone to update in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Phone'
      responses:
        '200':
          description: Successful operation to update array of phone in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Phone'
    delete:
      operationId: deletePhone
      tags:
        - Actors
      summary: To delete items of phone in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of phone id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of phone
            corresponding to ids in parameters are deleted from the cloud
          schema:
            type: string
            example: success
  /phonesids:
    get:
      operationId: getPhoneIds
      tags:
        - Actors
      summary: >-
        Return the list of id corresponding to the phone available to the
        current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of phone
            corresponding to the queries parameters
          schema:
            type: array
            items:
              type: string
  /personcount:
    get:
      operationId: getPersonCount
      tags:
        - Actors
      summary: Return the count of person available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of person corresponding to
            the queries parameters
          schema:
            type: number
  /persons:
    get:
      operationId: getPerson
      tags:
        - Actors
      summary: Return the list of person available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of person corresponding to
            the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/Person'
    post:
      operationId: postPerson
      tags:
        - Actors
      summary: To create new person in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of person to create through the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Person'
      responses:
        '200':
          description: Successful operation to create new person array in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Person'
    put:
      operationId: putPerson
      tags:
        - Actors
      summary: To update person in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of person to update in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Person'
      responses:
        '200':
          description: Successful operation to update array of person in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Person'
    delete:
      operationId: deletePerson
      tags:
        - Actors
      summary: To delete items of person in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of person id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of person
            corresponding to ids in parameters are deleted from the cloud
          schema:
            type: string
            example: success
  /personsids:
    get:
      operationId: getPersonIds
      tags:
        - Actors
      summary: >-
        Return the list of id corresponding to the person available to the
        current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of person
            corresponding to the queries parameters
          schema:
            type: array
            items:
              type: string
  /managedcompanycount:
    get:
      operationId: getManagedcompanyCount
      tags:
        - Companies
      summary: Return the count of managedcompany available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of managedcompany
            corresponding to the queries parameters
          schema:
            type: number
  /managedcompanies:
    get:
      operationId: getManagedcompany
      tags:
        - Companies
      summary: Return the list of managedcompany available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of managedcompany
            corresponding to the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/ManagedCompany'
    post:
      operationId: postManagedcompany
      tags:
        - Companies
      summary: To create new managedcompany in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of managedcompany to create through the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/ManagedCompany'
      responses:
        '200':
          description: Successful operation to create new managedcompany array in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/ManagedCompany'
    put:
      operationId: putManagedcompany
      tags:
        - Companies
      summary: To update managedcompany in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of managedcompany to update in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/ManagedCompany'
      responses:
        '200':
          description: Successful operation to update array of managedcompany in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/ManagedCompany'
    delete:
      operationId: deleteManagedcompany
      tags:
        - Companies
      summary: To delete items of managedcompany in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of managedcompany id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of managedcompany
            corresponding to ids in parameters are deleted from the cloud
          schema:
            type: string
            example: success
  /managedcompaniesids:
    get:
      operationId: getManagedcompanyIds
      tags:
        - Companies
      summary: >-
        Return the list of id corresponding to the managedcompany available to
        the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of managedcompany
            corresponding to the queries parameters
          schema:
            type: array
            items:
              type: string
  /companyusercount:
    get:
      operationId: getCompanyuserCount
      tags:
        - Companies
      summary: Return the count of companyuser available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of companyuser
            corresponding to the queries parameters
          schema:
            type: number
  /companyusers:
    get:
      operationId: getCompanyuser
      tags:
        - Companies
      summary: Return the list of companyuser available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of companyuser
            corresponding to the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/CompanyUser'
    post:
      operationId: postCompanyuser
      tags:
        - Companies
      summary: To create new companyuser in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of companyuser to create through the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/CompanyUser'
      responses:
        '200':
          description: Successful operation to create new companyuser array in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/CompanyUser'
    put:
      operationId: putCompanyuser
      tags:
        - Companies
      summary: To update companyuser in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of companyuser to update in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/CompanyUser'
      responses:
        '200':
          description: Successful operation to update array of companyuser in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/CompanyUser'
    delete:
      operationId: deleteCompanyuser
      tags:
        - Companies
      summary: To delete items of companyuser in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of companyuser id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of companyuser
            corresponding to ids in parameters are deleted from the cloud
          schema:
            type: string
            example: success
  /companyusersids:
    get:
      operationId: getCompanyuserIds
      tags:
        - Companies
      summary: >-
        Return the list of id corresponding to the companyuser available to the
        current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of companyuser
            corresponding to the queries parameters
          schema:
            type: array
            items:
              type: string
  /companyusersync:
    get:
      operationId: getCompanyuserSync
      tags:
        - Companies
      summary: >-
        Return the list of companyuser created, deleted or added from a specific
        date if specified (The CRUD action can be on the entity himself or one
        of linked detail entity).  The collection returned contains all detail
        entities and contains also entities deleted
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/requestedBlockSizeParam'
        - $ref: '#/parameters/timestampParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of companyuser for which a
            modification has been done from the specific date
          schema:
            type: array
            items:
              $ref: '#/definitions/CompanyUser'
  /companyuserinvitationrequestcount:
    get:
      operationId: getCompanyuserinvitationrequestCount
      tags:
        - Companies
      summary: >-
        Return the count of companyuserinvitationrequest available to the
        current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of
            companyuserinvitationrequest corresponding to the queries parameters
          schema:
            type: number
  /companyuserinvitationrequests:
    get:
      operationId: getCompanyuserinvitationrequest
      tags:
        - Companies
      summary: >-
        Return the list of companyuserinvitationrequest available to the current
        user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of
            companyuserinvitationrequest corresponding to the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/CompanyUserInvitationRequest'
    post:
      operationId: postCompanyuserinvitationrequest
      tags:
        - Companies
      summary: To create new companyuserinvitationrequest in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: >-
            This is the array of companyuserinvitationrequest to create through
            the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/CompanyUserInvitationRequest'
      responses:
        '200':
          description: >-
            Successful operation to create new companyuserinvitationrequest
            array in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/CompanyUserInvitationRequest'
    put:
      operationId: putCompanyuserinvitationrequest
      tags:
        - Companies
      summary: To update companyuserinvitationrequest in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: >-
            This is the array of companyuserinvitationrequest to update in the
            cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/CompanyUserInvitationRequest'
      responses:
        '200':
          description: >-
            Successful operation to update array of companyuserinvitationrequest
            in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/CompanyUserInvitationRequest'
    delete:
      operationId: deleteCompanyuserinvitationrequest
      tags:
        - Companies
      summary: To delete items of companyuserinvitationrequest in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of companyuserinvitationrequest id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of
            companyuserinvitationrequest corresponding to ids in parameters are
            deleted from the cloud
          schema:
            type: string
            example: success
  /companyuserinvitationrequestsids:
    get:
      operationId: getCompanyuserinvitationrequestIds
      tags:
        - Companies
      summary: >-
        Return the list of id corresponding to the companyuserinvitationrequest
        available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of
            companyuserinvitationrequest corresponding to the queries parameters
          schema:
            type: array
            items:
              type: string
  /projectcount:
    get:
      operationId: getProjectCount
      tags:
        - Projects
      summary: Return the count of project available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of project corresponding
            to the queries parameters
          schema:
            type: number
  /projects:
    get:
      operationId: getProject
      tags:
        - Projects
      summary: Return the list of project available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of project corresponding to
            the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/Project'
    post:
      operationId: postProject
      tags:
        - Projects
      summary: To create new project in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of project to create through the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Project'
      responses:
        '200':
          description: Successful operation to create new project array in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Project'
    put:
      operationId: putProject
      tags:
        - Projects
      summary: To update project in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of project to update in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Project'
      responses:
        '200':
          description: Successful operation to update array of project in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Project'
    delete:
      operationId: deleteProject
      tags:
        - Projects
      summary: To delete items of project in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of project id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of project
            corresponding to ids in parameters are deleted from the cloud
          schema:
            type: string
            example: success
  /projectsids:
    get:
      operationId: getProjectIds
      tags:
        - Projects
      summary: >-
        Return the list of id corresponding to the project available to the
        current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of project
            corresponding to the queries parameters
          schema:
            type: array
            items:
              type: string
  /projectsync:
    get:
      operationId: getProjectSync
      tags:
        - Projects
      summary: >-
        Return the list of project created, deleted or added from a specific
        date if specified (The CRUD action can be on the entity himself or one
        of linked detail entity).  The collection returned contains all detail
        entities and contains also entities deleted
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/requestedBlockSizeParam'
        - $ref: '#/parameters/timestampParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of project for which a
            modification has been done from the specific date
          schema:
            type: array
            items:
              $ref: '#/definitions/Project'
  /chaptercount:
    get:
      operationId: getChapterCount
      tags:
        - Projects
      summary: Return the count of chapter available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of chapter corresponding
            to the queries parameters
          schema:
            type: number
  /chapters:
    get:
      operationId: getChapter
      tags:
        - Projects
      summary: Return the list of chapter available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of chapter corresponding to
            the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/Chapter'
    post:
      operationId: postChapter
      tags:
        - Projects
      summary: To create new chapter in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of chapter to create through the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Chapter'
      responses:
        '200':
          description: Successful operation to create new chapter array in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Chapter'
    put:
      operationId: putChapter
      tags:
        - Projects
      summary: To update chapter in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of chapter to update in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Chapter'
      responses:
        '200':
          description: Successful operation to update array of chapter in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Chapter'
    delete:
      operationId: deleteChapter
      tags:
        - Projects
      summary: To delete items of chapter in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of chapter id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of chapter
            corresponding to ids in parameters are deleted from the cloud
          schema:
            type: string
            example: success
  /chaptersids:
    get:
      operationId: getChapterIds
      tags:
        - Projects
      summary: >-
        Return the list of id corresponding to the chapter available to the
        current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of chapter
            corresponding to the queries parameters
          schema:
            type: array
            items:
              type: string
  /chaptersync:
    get:
      operationId: getChapterSync
      tags:
        - Projects
      summary: >-
        Return the list of chapter created, deleted or added from a specific
        date if specified (The CRUD action can be on the entity himself or one
        of linked detail entity).  The collection returned contains all detail
        entities and contains also entities deleted
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/requestedBlockSizeParam'
        - $ref: '#/parameters/timestampParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of chapter for which a
            modification has been done from the specific date
          schema:
            type: array
            items:
              $ref: '#/definitions/Chapter'
  /issuetypecount:
    get:
      operationId: getIssuetypeCount
      tags:
        - Projects
      summary: Return the count of issuetype available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of issuetype corresponding
            to the queries parameters
          schema:
            type: number
  /issuetypes:
    get:
      operationId: getIssuetype
      tags:
        - Projects
      summary: Return the list of issuetype available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of issuetype corresponding
            to the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/IssueType'
    post:
      operationId: postIssuetype
      tags:
        - Projects
      summary: To create new issuetype in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of issuetype to create through the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/IssueType'
      responses:
        '200':
          description: Successful operation to create new issuetype array in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/IssueType'
    put:
      operationId: putIssuetype
      tags:
        - Projects
      summary: To update issuetype in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of issuetype to update in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/IssueType'
      responses:
        '200':
          description: Successful operation to update array of issuetype in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/IssueType'
    delete:
      operationId: deleteIssuetype
      tags:
        - Projects
      summary: To delete items of issuetype in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of issuetype id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of issuetype
            corresponding to ids in parameters are deleted from the cloud
          schema:
            type: string
            example: success
  /issuetypesids:
    get:
      operationId: getIssuetypeIds
      tags:
        - Projects
      summary: >-
        Return the list of id corresponding to the issuetype available to the
        current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of issuetype
            corresponding to the queries parameters
          schema:
            type: array
            items:
              type: string
  /issuetypesync:
    get:
      operationId: getIssuetypeSync
      tags:
        - Projects
      summary: >-
        Return the list of issuetype created, deleted or added from a specific
        date if specified (The CRUD action can be on the entity himself or one
        of linked detail entity).  The collection returned contains all detail
        entities and contains also entities deleted
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/requestedBlockSizeParam'
        - $ref: '#/parameters/timestampParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of issuetype for which a
            modification has been done from the specific date
          schema:
            type: array
            items:
              $ref: '#/definitions/IssueType'
  /issuetypenotesubjectcount:
    get:
      operationId: getIssuetypenotesubjectCount
      tags:
        - Projects
      summary: Return the count of issuetypenotesubject available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of issuetypenotesubject
            corresponding to the queries parameters
          schema:
            type: number
  /issuetypenotesubjects:
    get:
      operationId: getIssuetypenotesubject
      tags:
        - Projects
      summary: Return the list of issuetypenotesubject available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of issuetypenotesubject
            corresponding to the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/IssueTypeNoteSubject'
    post:
      operationId: postIssuetypenotesubject
      tags:
        - Projects
      summary: To create new issuetypenotesubject in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: >-
            This is the array of issuetypenotesubject to create through the
            cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/IssueTypeNoteSubject'
      responses:
        '200':
          description: >-
            Successful operation to create new issuetypenotesubject array in the
            cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/IssueTypeNoteSubject'
    put:
      operationId: putIssuetypenotesubject
      tags:
        - Projects
      summary: To update issuetypenotesubject in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of issuetypenotesubject to update in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/IssueTypeNoteSubject'
      responses:
        '200':
          description: >-
            Successful operation to update array of issuetypenotesubject in the
            cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/IssueTypeNoteSubject'
    delete:
      operationId: deleteIssuetypenotesubject
      tags:
        - Projects
      summary: To delete items of issuetypenotesubject in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of issuetypenotesubject id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of
            issuetypenotesubject corresponding to ids in parameters are deleted
            from the cloud
          schema:
            type: string
            example: success
  /issuetypenotesubjectsids:
    get:
      operationId: getIssuetypenotesubjectIds
      tags:
        - Projects
      summary: >-
        Return the list of id corresponding to the issuetypenotesubject
        available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of
            issuetypenotesubject corresponding to the queries parameters
          schema:
            type: array
            items:
              type: string
  /parentcellcount:
    get:
      operationId: getParentcellCount
      tags:
        - Projects
      summary: Return the count of parentcell available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of parentcell
            corresponding to the queries parameters
          schema:
            type: number
  /parentcells:
    get:
      operationId: getParentcell
      tags:
        - Projects
      summary: Return the list of parentcell available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of parentcell corresponding
            to the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/ParentCell'
    post:
      operationId: postParentcell
      tags:
        - Projects
      summary: To create new parentcell in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of parentcell to create through the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/ParentCell'
      responses:
        '200':
          description: Successful operation to create new parentcell array in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/ParentCell'
    put:
      operationId: putParentcell
      tags:
        - Projects
      summary: To update parentcell in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of parentcell to update in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/ParentCell'
      responses:
        '200':
          description: Successful operation to update array of parentcell in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/ParentCell'
    delete:
      operationId: deleteParentcell
      tags:
        - Projects
      summary: To delete items of parentcell in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of parentcell id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of parentcell
            corresponding to ids in parameters are deleted from the cloud
          schema:
            type: string
            example: success
  /parentcellsids:
    get:
      operationId: getParentcellIds
      tags:
        - Projects
      summary: >-
        Return the list of id corresponding to the parentcell available to the
        current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of parentcell
            corresponding to the queries parameters
          schema:
            type: array
            items:
              type: string
  /parentcellsync:
    get:
      operationId: getParentcellSync
      tags:
        - Projects
      summary: >-
        Return the list of parentcell created, deleted or added from a specific
        date if specified (The CRUD action can be on the entity himself or one
        of linked detail entity).  The collection returned contains all detail
        entities and contains also entities deleted
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/requestedBlockSizeParam'
        - $ref: '#/parameters/timestampParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of parentcell for which a
            modification has been done from the specific date
          schema:
            type: array
            items:
              $ref: '#/definitions/ParentCell'
  /subcellcount:
    get:
      operationId: getSubcellCount
      tags:
        - Projects
      summary: Return the count of subcell available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of subcell corresponding
            to the queries parameters
          schema:
            type: number
  /subcells:
    get:
      operationId: getSubcell
      tags:
        - Projects
      summary: Return the list of subcell available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of subcell corresponding to
            the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/SubCell'
    post:
      operationId: postSubcell
      tags:
        - Projects
      summary: To create new subcell in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of subcell to create through the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/SubCell'
      responses:
        '200':
          description: Successful operation to create new subcell array in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/SubCell'
    put:
      operationId: putSubcell
      tags:
        - Projects
      summary: To update subcell in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of subcell to update in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/SubCell'
      responses:
        '200':
          description: Successful operation to update array of subcell in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/SubCell'
    delete:
      operationId: deleteSubcell
      tags:
        - Projects
      summary: To delete items of subcell in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of subcell id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of subcell
            corresponding to ids in parameters are deleted from the cloud
          schema:
            type: string
            example: success
  /subcellsids:
    get:
      operationId: getSubcellIds
      tags:
        - Projects
      summary: >-
        Return the list of id corresponding to the subcell available to the
        current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of subcell
            corresponding to the queries parameters
          schema:
            type: array
            items:
              type: string
  /subcellsync:
    get:
      operationId: getSubcellSync
      tags:
        - Projects
      summary: >-
        Return the list of subcell created, deleted or added from a specific
        date if specified (The CRUD action can be on the entity himself or one
        of linked detail entity).  The collection returned contains all detail
        entities and contains also entities deleted
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/requestedBlockSizeParam'
        - $ref: '#/parameters/timestampParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of subcell for which a
            modification has been done from the specific date
          schema:
            type: array
            items:
              $ref: '#/definitions/SubCell'
  /noteprojectstatuscount:
    get:
      operationId: getNoteprojectstatusCount
      tags:
        - Projects
      summary: Return the count of noteprojectstatus available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of noteprojectstatus
            corresponding to the queries parameters
          schema:
            type: number
  /noteprojectstatus:
    get:
      operationId: getNoteprojectstatus
      tags:
        - Projects
      summary: Return the list of noteprojectstatus available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of noteprojectstatus
            corresponding to the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/NoteProjectStatus'
    post:
      operationId: postNoteprojectstatus
      tags:
        - Projects
      summary: To create new noteprojectstatus in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of noteprojectstatus to create through the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/NoteProjectStatus'
      responses:
        '200':
          description: >-
            Successful operation to create new noteprojectstatus array in the
            cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/NoteProjectStatus'
    put:
      operationId: putNoteprojectstatus
      tags:
        - Projects
      summary: To update noteprojectstatus in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of noteprojectstatus to update in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/NoteProjectStatus'
      responses:
        '200':
          description: >-
            Successful operation to update array of noteprojectstatus in the
            cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/NoteProjectStatus'
    delete:
      operationId: deleteNoteprojectstatus
      tags:
        - Projects
      summary: To delete items of noteprojectstatus in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of noteprojectstatus id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of
            noteprojectstatus corresponding to ids in parameters are deleted
            from the cloud
          schema:
            type: string
            example: success
  /noteprojectstatusids:
    get:
      operationId: getNoteprojectstatusIds
      tags:
        - Projects
      summary: >-
        Return the list of id corresponding to the noteprojectstatus available
        to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of noteprojectstatus
            corresponding to the queries parameters
          schema:
            type: array
            items:
              type: string
  /noteprojectstatussync:
    get:
      operationId: getNoteprojectstatusSync
      tags:
        - Projects
      summary: >-
        Return the list of noteprojectstatus created, deleted or added from a
        specific date if specified (The CRUD action can be on the entity himself
        or one of linked detail entity).  The collection returned contains all
        detail entities and contains also entities deleted
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/requestedBlockSizeParam'
        - $ref: '#/parameters/timestampParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of noteprojectstatus for
            which a modification has been done from the specific date
          schema:
            type: array
            items:
              $ref: '#/definitions/NoteProjectStatus'
  /foldercount:
    get:
      operationId: getFolderCount
      tags:
        - Projects
      summary: Return the count of folder available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of folder corresponding to
            the queries parameters
          schema:
            type: number
  /folders:
    get:
      operationId: getFolder
      tags:
        - Projects
      summary: Return the list of folder available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of folder corresponding to
            the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/Folder'
    post:
      operationId: postFolder
      tags:
        - Projects
      summary: To create new folder in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of folder to create through the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Folder'
      responses:
        '200':
          description: Successful operation to create new folder array in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Folder'
    put:
      operationId: putFolder
      tags:
        - Projects
      summary: To update folder in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of folder to update in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Folder'
      responses:
        '200':
          description: Successful operation to update array of folder in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Folder'
    delete:
      operationId: deleteFolder
      tags:
        - Projects
      summary: To delete items of folder in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of folder id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of folder
            corresponding to ids in parameters are deleted from the cloud
          schema:
            type: string
            example: success
  /foldersids:
    get:
      operationId: getFolderIds
      tags:
        - Projects
      summary: >-
        Return the list of id corresponding to the folder available to the
        current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of folder
            corresponding to the queries parameters
          schema:
            type: array
            items:
              type: string
  /foldersync:
    get:
      operationId: getFolderSync
      tags:
        - Projects
      summary: >-
        Return the list of folder created, deleted or added from a specific date
        if specified (The CRUD action can be on the entity himself or one of
        linked detail entity).  The collection returned contains all detail
        entities and contains also entities deleted
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/requestedBlockSizeParam'
        - $ref: '#/parameters/timestampParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of folder for which a
            modification has been done from the specific date
          schema:
            type: array
            items:
              $ref: '#/definitions/Folder'
  /foldervisibilitycount:
    get:
      operationId: getFoldervisibilityCount
      tags:
        - Projects
      summary: Return the count of foldervisibility available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of foldervisibility
            corresponding to the queries parameters
          schema:
            type: number
  /foldervisibilities:
    get:
      operationId: getFoldervisibility
      tags:
        - Projects
      summary: Return the list of foldervisibility available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of foldervisibility
            corresponding to the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/FolderVisibility'
    post:
      operationId: postFoldervisibility
      tags:
        - Projects
      summary: To create new foldervisibility in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of foldervisibility to create through the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/FolderVisibility'
      responses:
        '200':
          description: >-
            Successful operation to create new foldervisibility array in the
            cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/FolderVisibility'
    put:
      operationId: putFoldervisibility
      tags:
        - Projects
      summary: To update foldervisibility in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of foldervisibility to update in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/FolderVisibility'
      responses:
        '200':
          description: >-
            Successful operation to update array of foldervisibility in the
            cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/FolderVisibility'
    delete:
      operationId: deleteFoldervisibility
      tags:
        - Projects
      summary: To delete items of foldervisibility in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of foldervisibility id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of foldervisibility
            corresponding to ids in parameters are deleted from the cloud
          schema:
            type: string
            example: success
  /foldervisibilitiesids:
    get:
      operationId: getFoldervisibilityIds
      tags:
        - Projects
      summary: >-
        Return the list of id corresponding to the foldervisibility available to
        the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of foldervisibility
            corresponding to the queries parameters
          schema:
            type: array
            items:
              type: string
  /contactdetailscount:
    get:
      operationId: getContactdetailsCount
      tags:
        - Projects
      summary: Return the count of contactdetails available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of contactdetails
            corresponding to the queries parameters
          schema:
            type: number
  /contactdetails:
    get:
      operationId: getContactdetails
      tags:
        - Projects
      summary: Return the list of contactdetails available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of contactdetails
            corresponding to the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/ContactDetails'
    post:
      operationId: postContactdetails
      tags:
        - Projects
      summary: To create new contactdetails in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of contactdetails to create through the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/ContactDetails'
      responses:
        '200':
          description: Successful operation to create new contactdetails array in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/ContactDetails'
    put:
      operationId: putContactdetails
      tags:
        - Projects
      summary: To update contactdetails in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of contactdetails to update in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/ContactDetails'
      responses:
        '200':
          description: Successful operation to update array of contactdetails in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/ContactDetails'
    delete:
      operationId: deleteContactdetails
      tags:
        - Projects
      summary: To delete items of contactdetails in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of contactdetails id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of contactdetails
            corresponding to ids in parameters are deleted from the cloud
          schema:
            type: string
            example: success
  /contactdetailsids:
    get:
      operationId: getContactdetailsIds
      tags:
        - Projects
      summary: >-
        Return the list of id corresponding to the contactdetails available to
        the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of contactdetails
            corresponding to the queries parameters
          schema:
            type: array
            items:
              type: string
  /contactdetailssync:
    get:
      operationId: getContactdetailsSync
      tags:
        - Projects
      summary: >-
        Return the list of contactdetails created, deleted or added from a
        specific date if specified (The CRUD action can be on the entity himself
        or one of linked detail entity).  The collection returned contains all
        detail entities and contains also entities deleted
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/requestedBlockSizeParam'
        - $ref: '#/parameters/timestampParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of contactdetails for which
            a modification has been done from the specific date
          schema:
            type: array
            items:
              $ref: '#/definitions/ContactDetails'
  /contactissuetypecount:
    get:
      operationId: getContactissuetypeCount
      tags:
        - Projects
      summary: Return the count of contactissuetype available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of contactissuetype
            corresponding to the queries parameters
          schema:
            type: number
  /contactissuetypes:
    get:
      operationId: getContactissuetype
      tags:
        - Projects
      summary: Return the list of contactissuetype available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of contactissuetype
            corresponding to the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/ContactIssueType'
    post:
      operationId: postContactissuetype
      tags:
        - Projects
      summary: To create new contactissuetype in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of contactissuetype to create through the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/ContactIssueType'
      responses:
        '200':
          description: >-
            Successful operation to create new contactissuetype array in the
            cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/ContactIssueType'
    put:
      operationId: putContactissuetype
      tags:
        - Projects
      summary: To update contactissuetype in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of contactissuetype to update in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/ContactIssueType'
      responses:
        '200':
          description: >-
            Successful operation to update array of contactissuetype in the
            cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/ContactIssueType'
    delete:
      operationId: deleteContactissuetype
      tags:
        - Projects
      summary: To delete items of contactissuetype in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of contactissuetype id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of contactissuetype
            corresponding to ids in parameters are deleted from the cloud
          schema:
            type: string
            example: success
  /contactissuetypesids:
    get:
      operationId: getContactissuetypeIds
      tags:
        - Projects
      summary: >-
        Return the list of id corresponding to the contactissuetype available to
        the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of contactissuetype
            corresponding to the queries parameters
          schema:
            type: array
            items:
              type: string
  /uploaddocument:
    post:
      operationId: uploadDocuments
      tags:
        - Documents
      summary: To upload a new document or a version of document in the cloud APROPLAN
      consumes:
        - application/pdf
        - application/jpg
        - application/jpeg
        - application/png
        - application/gif
        - application/bmp
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: query
          name: file
          type: string
          description: 'to specify the kind of the document: "working" (default) or "source"'
          enum:
            - working
            - source
        - in: query
          name: action
          type: string
          enum:
            - add
            - join
        - in: query
          name: target
          type: string
          description: >-
            To specify if the upload of document concerns a new doc or a new
            version of an existing document. Values: "doc" (default) or
            "version"
          enum:
            - doc
            - version
        - in: query
          name: folderid
          type: string
          description: >-
            The folder where the document must be uploaded. Required when new
            document
        - in: query
          name: parentdocid
          type: string
          description: >-
            When uploading a new version, this is the id of the document for
            which the new version is uploaded. Required when new version of
            existing document
        - in: query
          name: name
          type: string
          description: This is the name to apply to the new document/version
        - in: query
          name: id
          type: string
          description: >-
            This is the new id to apply to the new document/version. If not
            supplied, the system will create it itself
        - in: query
          name: subject
          type: string
          description: This is the subject to put in the metadata of the document
        - in: query
          name: references
          type: string
          description: This is the references to put in the metadata of the document
        - in: query
          name: filetype
          type: string
          enum:
            - document
            - photo
            - picture
            - plan
          description: >-
            This is to specify the type of the document: "document", "photo",
            "picture", "plan"
        - in: body
          name: body
          description: This is the array of projects to create through the cloud
          schema:
            type: string
            format: binary
      responses:
        '200':
          description: Successful operation to upload a new document/version
          schema:
            $ref: '#/definitions/DocumentBase'
  /documentcount:
    get:
      operationId: getDocumentCount
      tags:
        - Documents
      summary: Return the count of document available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of document corresponding
            to the queries parameters
          schema:
            type: number
  /documents:
    get:
      operationId: getDocument
      tags:
        - Documents
      summary: Return the list of document available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of document corresponding
            to the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/Document'
    post:
      operationId: postDocument
      tags:
        - Documents
      summary: To create new document in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of document to create through the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Document'
      responses:
        '200':
          description: Successful operation to create new document array in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Document'
    put:
      operationId: putDocument
      tags:
        - Documents
      summary: To update document in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of document to update in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Document'
      responses:
        '200':
          description: Successful operation to update array of document in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Document'
    delete:
      operationId: deleteDocument
      tags:
        - Documents
      summary: To delete items of document in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of document id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of document
            corresponding to ids in parameters are deleted from the cloud
          schema:
            type: string
            example: success
  /documentsids:
    get:
      operationId: getDocumentIds
      tags:
        - Documents
      summary: >-
        Return the list of id corresponding to the document available to the
        current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of document
            corresponding to the queries parameters
          schema:
            type: array
            items:
              type: string
  /attachmentdocumentsync:
    get:
      operationId: getAttachmentDocumentSync
      tags:
        - Documents
      summary: >-
        Return the list of document created, deleted or added attached to a
        point or form for which the user has the visibility from a specific date
        if specified (The CRUD action can be on the entity himself or one of
        linked detail entity).  The collection returned contains all detail
        entities and contains also entities deleted
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/requestedBlockSizeParam'
        - $ref: '#/parameters/timestampParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of note for which a
            modification has been done from the specific date
          schema:
            type: array
            items:
              $ref: '#/definitions/Document'
  /folderdocumentsync:
    get:
      operationId: getFolderDocumentSync
      tags:
        - Documents
      summary: >-
        Return the list of document created, deleted or added for which the user
        has the visibility in the project structure from a specific date if
        specified (The CRUD action can be on the entity himself or one of linked
        detail entity).  The collection returned contains all detail entities
        and contains also entities deleted
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/requestedBlockSizeParam'
        - $ref: '#/parameters/timestampParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of note for which a
            modification has been done from the specific date
          schema:
            type: array
            items:
              $ref: '#/definitions/Document'
  /versioncount:
    get:
      operationId: getVersionCount
      tags:
        - Documents
      summary: Return the count of version available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of version corresponding
            to the queries parameters
          schema:
            type: number
  /versions:
    get:
      operationId: getVersion
      tags:
        - Documents
      summary: Return the list of version available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of version corresponding to
            the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/Version'
    post:
      operationId: postVersion
      tags:
        - Documents
      summary: To create new version in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of version to create through the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Version'
      responses:
        '200':
          description: Successful operation to create new version array in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Version'
    put:
      operationId: putVersion
      tags:
        - Documents
      summary: To update version in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of version to update in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Version'
      responses:
        '200':
          description: Successful operation to update array of version in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Version'
    delete:
      operationId: deleteVersion
      tags:
        - Documents
      summary: To delete items of version in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of version id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of version
            corresponding to ids in parameters are deleted from the cloud
          schema:
            type: string
            example: success
  /versionsids:
    get:
      operationId: getVersionIds
      tags:
        - Documents
      summary: >-
        Return the list of id corresponding to the version available to the
        current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of version
            corresponding to the queries parameters
          schema:
            type: array
            items:
              type: string
  /meetingcount:
    get:
      operationId: getMeetingCount
      tags:
        - Lists
      summary: Return the count of meeting available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of meeting corresponding
            to the queries parameters
          schema:
            type: number
  /meetings:
    get:
      operationId: getMeeting
      tags:
        - Lists
      summary: Return the list of meeting available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of meeting corresponding to
            the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/Meeting'
    post:
      operationId: postMeeting
      tags:
        - Lists
      summary: To create new meeting in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of meeting to create through the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Meeting'
      responses:
        '200':
          description: Successful operation to create new meeting array in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Meeting'
    put:
      operationId: putMeeting
      tags:
        - Lists
      summary: To update meeting in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of meeting to update in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Meeting'
      responses:
        '200':
          description: Successful operation to update array of meeting in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Meeting'
    delete:
      operationId: deleteMeeting
      tags:
        - Lists
      summary: To delete items of meeting in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of meeting id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of meeting
            corresponding to ids in parameters are deleted from the cloud
          schema:
            type: string
            example: success
  /meetingsids:
    get:
      operationId: getMeetingIds
      tags:
        - Lists
      summary: >-
        Return the list of id corresponding to the meeting available to the
        current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of meeting
            corresponding to the queries parameters
          schema:
            type: array
            items:
              type: string
  /meetingsync:
    get:
      operationId: getMeetingSync
      tags:
        - Lists
      summary: >-
        Return the list of meeting created, deleted or added from a specific
        date if specified (The CRUD action can be on the entity himself or one
        of linked detail entity).  The collection returned contains all detail
        entities and contains also entities deleted
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/requestedBlockSizeParam'
        - $ref: '#/parameters/timestampParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of meeting for which a
            modification has been done from the specific date
          schema:
            type: array
            items:
              $ref: '#/definitions/Meeting'
  /meetingconcerncount:
    get:
      operationId: getMeetingconcernCount
      tags:
        - Lists
      summary: Return the count of meetingconcern available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of meetingconcern
            corresponding to the queries parameters
          schema:
            type: number
  /meetingconcerns:
    get:
      operationId: getMeetingconcern
      tags:
        - Lists
      summary: Return the list of meetingconcern available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of meetingconcern
            corresponding to the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/MeetingConcern'
    post:
      operationId: postMeetingconcern
      tags:
        - Lists
      summary: To create new meetingconcern in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of meetingconcern to create through the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/MeetingConcern'
      responses:
        '200':
          description: Successful operation to create new meetingconcern array in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/MeetingConcern'
    put:
      operationId: putMeetingconcern
      tags:
        - Lists
      summary: To update meetingconcern in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of meetingconcern to update in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/MeetingConcern'
      responses:
        '200':
          description: Successful operation to update array of meetingconcern in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/MeetingConcern'
    delete:
      operationId: deleteMeetingconcern
      tags:
        - Lists
      summary: To delete items of meetingconcern in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of meetingconcern id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of meetingconcern
            corresponding to ids in parameters are deleted from the cloud
          schema:
            type: string
            example: success
  /meetingconcernsids:
    get:
      operationId: getMeetingconcernIds
      tags:
        - Lists
      summary: >-
        Return the list of id corresponding to the meetingconcern available to
        the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of meetingconcern
            corresponding to the queries parameters
          schema:
            type: array
            items:
              type: string
  /meetingdocumentcount:
    get:
      operationId: getMeetingdocumentCount
      tags:
        - Lists
      summary: Return the count of meetingdocument available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of meetingdocument
            corresponding to the queries parameters
          schema:
            type: number
  /meetingdocuments:
    get:
      operationId: getMeetingdocument
      tags:
        - Lists
      summary: Return the list of meetingdocument available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of meetingdocument
            corresponding to the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/MeetingDocument'
    post:
      operationId: postMeetingdocument
      tags:
        - Lists
      summary: To create new meetingdocument in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of meetingdocument to create through the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/MeetingDocument'
      responses:
        '200':
          description: >-
            Successful operation to create new meetingdocument array in the
            cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/MeetingDocument'
    put:
      operationId: putMeetingdocument
      tags:
        - Lists
      summary: To update meetingdocument in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of meetingdocument to update in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/MeetingDocument'
      responses:
        '200':
          description: Successful operation to update array of meetingdocument in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/MeetingDocument'
    delete:
      operationId: deleteMeetingdocument
      tags:
        - Lists
      summary: To delete items of meetingdocument in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of meetingdocument id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of meetingdocument
            corresponding to ids in parameters are deleted from the cloud
          schema:
            type: string
            example: success
  /meetingdocumentsids:
    get:
      operationId: getMeetingdocumentIds
      tags:
        - Lists
      summary: >-
        Return the list of id corresponding to the meetingdocument available to
        the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of meetingdocument
            corresponding to the queries parameters
          schema:
            type: array
            items:
              type: string
  /meetingtransferreddocscount:
    get:
      operationId: getMeetingtransferreddocsCount
      tags:
        - Lists
      summary: Return the count of meetingtransferreddocs available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of meetingtransferreddocs
            corresponding to the queries parameters
          schema:
            type: number
  /meetingtransferreddocs:
    get:
      operationId: getMeetingtransferreddocs
      tags:
        - Lists
      summary: Return the list of meetingtransferreddocs available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of meetingtransferreddocs
            corresponding to the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/MeetingTransferredDocs'
    post:
      operationId: postMeetingtransferreddocs
      tags:
        - Lists
      summary: To create new meetingtransferreddocs in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: >-
            This is the array of meetingtransferreddocs to create through the
            cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/MeetingTransferredDocs'
      responses:
        '200':
          description: >-
            Successful operation to create new meetingtransferreddocs array in
            the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/MeetingTransferredDocs'
    put:
      operationId: putMeetingtransferreddocs
      tags:
        - Lists
      summary: To update meetingtransferreddocs in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of meetingtransferreddocs to update in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/MeetingTransferredDocs'
      responses:
        '200':
          description: >-
            Successful operation to update array of meetingtransferreddocs in
            the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/MeetingTransferredDocs'
    delete:
      operationId: deleteMeetingtransferreddocs
      tags:
        - Lists
      summary: To delete items of meetingtransferreddocs in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of meetingtransferreddocs id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of
            meetingtransferreddocs corresponding to ids in parameters are
            deleted from the cloud
          schema:
            type: string
            example: success
  /meetingtransferreddocsids:
    get:
      operationId: getMeetingtransferreddocsIds
      tags:
        - Lists
      summary: >-
        Return the list of id corresponding to the meetingtransferreddocs
        available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of
            meetingtransferreddocs corresponding to the queries parameters
          schema:
            type: array
            items:
              type: string
  /meetingtransferreddocstocount:
    get:
      operationId: getMeetingtransferreddocstoCount
      tags:
        - Lists
      summary: >-
        Return the count of meetingtransferreddocsto available to the current
        user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of
            meetingtransferreddocsto corresponding to the queries parameters
          schema:
            type: number
  /meetingtransferreddocstos:
    get:
      operationId: getMeetingtransferreddocsto
      tags:
        - Lists
      summary: >-
        Return the list of meetingtransferreddocsto available to the current
        user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of meetingtransferreddocsto
            corresponding to the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/MeetingTransferredDocsTo'
    post:
      operationId: postMeetingtransferreddocsto
      tags:
        - Lists
      summary: To create new meetingtransferreddocsto in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: >-
            This is the array of meetingtransferreddocsto to create through the
            cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/MeetingTransferredDocsTo'
      responses:
        '200':
          description: >-
            Successful operation to create new meetingtransferreddocsto array in
            the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/MeetingTransferredDocsTo'
    put:
      operationId: putMeetingtransferreddocsto
      tags:
        - Lists
      summary: To update meetingtransferreddocsto in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of meetingtransferreddocsto to update in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/MeetingTransferredDocsTo'
      responses:
        '200':
          description: >-
            Successful operation to update array of meetingtransferreddocsto in
            the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/MeetingTransferredDocsTo'
    delete:
      operationId: deleteMeetingtransferreddocsto
      tags:
        - Lists
      summary: To delete items of meetingtransferreddocsto in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of meetingtransferreddocsto id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of
            meetingtransferreddocsto corresponding to ids in parameters are
            deleted from the cloud
          schema:
            type: string
            example: success
  /meetingtransferreddocstosids:
    get:
      operationId: getMeetingtransferreddocstoIds
      tags:
        - Lists
      summary: >-
        Return the list of id corresponding to the meetingtransferreddocsto
        available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of
            meetingtransferreddocsto corresponding to the queries parameters
          schema:
            type: array
            items:
              type: string
  /meetingreportcount:
    get:
      operationId: getMeetingreportCount
      tags:
        - Lists
      summary: Return the count of meetingreport available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of meetingreport
            corresponding to the queries parameters
          schema:
            type: number
  /meetingreports:
    get:
      operationId: getMeetingreport
      tags:
        - Lists
      summary: Return the list of meetingreport available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of meetingreport
            corresponding to the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/MeetingReport'
    post:
      operationId: postMeetingreport
      tags:
        - Lists
      summary: To create new meetingreport in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of meetingreport to create through the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/MeetingReport'
      responses:
        '200':
          description: Successful operation to create new meetingreport array in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/MeetingReport'
    put:
      operationId: putMeetingreport
      tags:
        - Lists
      summary: To update meetingreport in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of meetingreport to update in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/MeetingReport'
      responses:
        '200':
          description: Successful operation to update array of meetingreport in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/MeetingReport'
    delete:
      operationId: deleteMeetingreport
      tags:
        - Lists
      summary: To delete items of meetingreport in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of meetingreport id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of meetingreport
            corresponding to ids in parameters are deleted from the cloud
          schema:
            type: string
            example: success
  /meetingreportsids:
    get:
      operationId: getMeetingreportIds
      tags:
        - Lists
      summary: >-
        Return the list of id corresponding to the meetingreport available to
        the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of meetingreport
            corresponding to the queries parameters
          schema:
            type: array
            items:
              type: string
  /uploadnotedocument:
    post:
      operationId: uploadNoteDocuments
      tags:
        - Points
      summary: >-
        To upload a new document in APROPLAN and to attach it directly to a
        point
      consumes:
        - application/pdf
        - application/jpg
        - application/jpeg
        - application/png
        - application/gif
        - application/bmp
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: query
          name: noteid
          type: string
          required: true
          description: The id of the point on which the uploaded document must be attached
        - in: query
          name: file
          type: string
          description: 'to specify the kind of the document: "working" (default) or "source"'
          enum:
            - working
            - source
        - in: query
          name: action
          type: string
          enum:
            - add
            - join
        - in: query
          name: target
          type: string
          description: >-
            To specify if the upload of document concerns a new doc or a new
            version of an existing document. Values: "doc" (default) or
            "version"
          enum:
            - doc
            - version
        - in: query
          name: folderid
          type: string
          description: >-
            The folder where the document must be uploaded. Required when new
            document
        - in: query
          name: parentdocid
          type: string
          description: >-
            When uploading a new version, this is the id of the document for
            which the new version is uploaded. Required when new version of
            existing document
        - in: query
          name: name
          type: string
          description: This is the name to apply to the new document/version
        - in: query
          name: id
          type: string
          description: >-
            This is the new id to apply to the new document/version. If not
            supplied, the system will create it itself
        - in: query
          name: subject
          type: string
          description: This is the subject to put in the metadata of the document
        - in: query
          name: references
          type: string
          description: This is the references to put in the metadata of the document
        - in: query
          name: filetype
          type: string
          enum:
            - document
            - photo
            - picture
            - plan
          description: >-
            This is to specify the type of the document: "document", "photo",
            "picture", "plan"
        - in: body
          name: body
          description: This is the array of projects to create through the cloud
          schema:
            type: string
            format: binary
      responses:
        '200':
          description: >-
            Successful operation to upload a new document/version and attach it
            to a point
          schema:
            $ref: '#/definitions/NoteDocument'
  /notecount:
    get:
      operationId: getNoteCount
      tags:
        - Points
      summary: Return the count of note available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of note corresponding to
            the queries parameters
          schema:
            type: number
  /notes:
    get:
      operationId: getNote
      tags:
        - Points
      summary: Return the list of note available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of note corresponding to
            the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/Note'
    post:
      operationId: postNote
      tags:
        - Points
      summary: To create new note in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of note to create through the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Note'
      responses:
        '200':
          description: Successful operation to create new note array in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Note'
    put:
      operationId: putNote
      tags:
        - Points
      summary: To update note in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of note to update in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Note'
      responses:
        '200':
          description: Successful operation to update array of note in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Note'
    delete:
      operationId: deleteNote
      tags:
        - Points
      summary: To delete items of note in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of note id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of note
            corresponding to ids in parameters are deleted from the cloud
          schema:
            type: string
            example: success
  /notesids:
    get:
      operationId: getNoteIds
      tags:
        - Points
      summary: >-
        Return the list of id corresponding to the note available to the current
        user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of note corresponding
            to the queries parameters
          schema:
            type: array
            items:
              type: string
  /notesync:
    get:
      operationId: getNoteSync
      tags:
        - Points
      summary: >-
        Return the list of note created, deleted or added from a specific date
        if specified (The CRUD action can be on the entity himself or one of
        linked detail entity).  The collection returned contains all detail
        entities and contains also entities deleted
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/requestedBlockSizeParam'
        - $ref: '#/parameters/timestampParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of note for which a
            modification has been done from the specific date
          schema:
            type: array
            items:
              $ref: '#/definitions/Note'
  /noteinchargecount:
    get:
      operationId: getNoteinchargeCount
      tags:
        - Annotations
      summary: Return the count of noteincharge available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of noteincharge
            corresponding to the queries parameters
          schema:
            type: number
  /noteincharges:
    get:
      operationId: getNoteincharge
      tags:
        - Annotations
      summary: Return the list of noteincharge available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of noteincharge
            corresponding to the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/NoteInCharge'
    post:
      operationId: postNoteincharge
      tags:
        - Annotations
      summary: To create new noteincharge in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of noteincharge to create through the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/NoteInCharge'
      responses:
        '200':
          description: Successful operation to create new noteincharge array in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/NoteInCharge'
    put:
      operationId: putNoteincharge
      tags:
        - Annotations
      summary: To update noteincharge in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of noteincharge to update in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/NoteInCharge'
      responses:
        '200':
          description: Successful operation to update array of noteincharge in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/NoteInCharge'
    delete:
      operationId: deleteNoteincharge
      tags:
        - Annotations
      summary: To delete items of noteincharge in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of noteincharge id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of noteincharge
            corresponding to ids in parameters are deleted from the cloud
          schema:
            type: string
            example: success
  /noteinchargesids:
    get:
      operationId: getNoteinchargeIds
      tags:
        - Annotations
      summary: >-
        Return the list of id corresponding to the noteincharge available to the
        current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of noteincharge
            corresponding to the queries parameters
          schema:
            type: array
            items:
              type: string
  /notecommentcount:
    get:
      operationId: getNotecommentCount
      tags:
        - Annotations
      summary: Return the count of notecomment available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of notecomment
            corresponding to the queries parameters
          schema:
            type: number
  /notecomments:
    get:
      operationId: getNotecomment
      tags:
        - Annotations
      summary: Return the list of notecomment available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of notecomment
            corresponding to the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/NoteComment'
    post:
      operationId: postNotecomment
      tags:
        - Annotations
      summary: To create new notecomment in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of notecomment to create through the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/NoteComment'
      responses:
        '200':
          description: Successful operation to create new notecomment array in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/NoteComment'
    put:
      operationId: putNotecomment
      tags:
        - Annotations
      summary: To update notecomment in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of notecomment to update in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/NoteComment'
      responses:
        '200':
          description: Successful operation to update array of notecomment in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/NoteComment'
    delete:
      operationId: deleteNotecomment
      tags:
        - Annotations
      summary: To delete items of notecomment in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of notecomment id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of notecomment
            corresponding to ids in parameters are deleted from the cloud
          schema:
            type: string
            example: success
  /notecommentsids:
    get:
      operationId: getNotecommentIds
      tags:
        - Annotations
      summary: >-
        Return the list of id corresponding to the notecomment available to the
        current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of notecomment
            corresponding to the queries parameters
          schema:
            type: array
            items:
              type: string
  /notedocumentcount:
    get:
      operationId: getNotedocumentCount
      tags:
        - Annotations
      summary: Return the count of notedocument available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of notedocument
            corresponding to the queries parameters
          schema:
            type: number
  /notedocuments:
    get:
      operationId: getNotedocument
      tags:
        - Annotations
      summary: Return the list of notedocument available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of notedocument
            corresponding to the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/NoteDocument'
    post:
      operationId: postNotedocument
      tags:
        - Annotations
      summary: To create new notedocument in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of notedocument to create through the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/NoteDocument'
      responses:
        '200':
          description: Successful operation to create new notedocument array in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/NoteDocument'
    put:
      operationId: putNotedocument
      tags:
        - Annotations
      summary: To update notedocument in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of notedocument to update in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/NoteDocument'
      responses:
        '200':
          description: Successful operation to update array of notedocument in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/NoteDocument'
    delete:
      operationId: deleteNotedocument
      tags:
        - Annotations
      summary: To delete items of notedocument in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of notedocument id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of notedocument
            corresponding to ids in parameters are deleted from the cloud
          schema:
            type: string
            example: success
  /notedocumentsids:
    get:
      operationId: getNotedocumentIds
      tags:
        - Annotations
      summary: >-
        Return the list of id corresponding to the notedocument available to the
        current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of notedocument
            corresponding to the queries parameters
          schema:
            type: array
            items:
              type: string
  /drawingcount:
    get:
      operationId: getDrawingCount
      tags:
        - Annotations
      summary: Return the count of drawing available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of drawing corresponding
            to the queries parameters
          schema:
            type: number
  /drawings:
    get:
      operationId: getDrawing
      tags:
        - Annotations
      summary: Return the list of drawing available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of drawing corresponding to
            the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/Drawing'
    post:
      operationId: postDrawing
      tags:
        - Annotations
      summary: To create new drawing in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of drawing to create through the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Drawing'
      responses:
        '200':
          description: Successful operation to create new drawing array in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Drawing'
    put:
      operationId: putDrawing
      tags:
        - Annotations
      summary: To update drawing in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of drawing to update in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Drawing'
      responses:
        '200':
          description: Successful operation to update array of drawing in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Drawing'
    delete:
      operationId: deleteDrawing
      tags:
        - Annotations
      summary: To delete items of drawing in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of drawing id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of drawing
            corresponding to ids in parameters are deleted from the cloud
          schema:
            type: string
            example: success
  /drawingsids:
    get:
      operationId: getDrawingIds
      tags:
        - Annotations
      summary: >-
        Return the list of id corresponding to the drawing available to the
        current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of drawing
            corresponding to the queries parameters
          schema:
            type: array
            items:
              type: string
  /formcount:
    get:
      operationId: getFormCount
      tags:
        - Forms
      summary: Return the count of form available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of form corresponding to
            the queries parameters
          schema:
            type: number
  /forms:
    get:
      operationId: getForm
      tags:
        - Forms
      summary: Return the list of form available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of form corresponding to
            the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/Form'
    post:
      operationId: postForm
      tags:
        - Forms
      summary: To create new form in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of form to create through the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Form'
      responses:
        '200':
          description: Successful operation to create new form array in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Form'
    put:
      operationId: putForm
      tags:
        - Forms
      summary: To update form in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of form to update in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Form'
      responses:
        '200':
          description: Successful operation to update array of form in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/Form'
    delete:
      operationId: deleteForm
      tags:
        - Forms
      summary: To delete items of form in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of form id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of form
            corresponding to ids in parameters are deleted from the cloud
          schema:
            type: string
            example: success
  /formsids:
    get:
      operationId: getFormIds
      tags:
        - Forms
      summary: >-
        Return the list of id corresponding to the form available to the current
        user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of form corresponding
            to the queries parameters
          schema:
            type: array
            items:
              type: string
  /formsectioncount:
    get:
      operationId: getFormsectionCount
      tags:
        - Forms
      summary: Return the count of formsection available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of formsection
            corresponding to the queries parameters
          schema:
            type: number
  /formsections:
    get:
      operationId: getFormsection
      tags:
        - Forms
      summary: Return the list of formsection available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of formsection
            corresponding to the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/FormSection'
  /formsectionsids:
    get:
      operationId: getFormsectionIds
      tags:
        - Forms
      summary: >-
        Return the list of id corresponding to the formsection available to the
        current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of formsection
            corresponding to the queries parameters
          schema:
            type: array
            items:
              type: string
  /formitemcount:
    get:
      operationId: getFormitemCount
      tags:
        - Forms
      summary: Return the count of formitem available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of formitem corresponding
            to the queries parameters
          schema:
            type: number
  /formitems:
    get:
      operationId: getFormitem
      tags:
        - Forms
      summary: Return the list of formitem available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of formitem corresponding
            to the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/FormItem'
    post:
      operationId: postFormitem
      tags:
        - Forms
      summary: To create new formitem in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of formitem to create through the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/FormItem'
      responses:
        '200':
          description: Successful operation to create new formitem array in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/FormItem'
    put:
      operationId: putFormitem
      tags:
        - Forms
      summary: To update formitem in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of formitem to update in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/FormItem'
      responses:
        '200':
          description: Successful operation to update array of formitem in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/FormItem'
    delete:
      operationId: deleteFormitem
      tags:
        - Forms
      summary: To delete items of formitem in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of formitem id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of formitem
            corresponding to ids in parameters are deleted from the cloud
          schema:
            type: string
            example: success
  /formitemsids:
    get:
      operationId: getFormitemIds
      tags:
        - Forms
      summary: >-
        Return the list of id corresponding to the formitem available to the
        current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of formitem
            corresponding to the queries parameters
          schema:
            type: array
            items:
              type: string
  /formtemplatecount:
    get:
      operationId: getFormtemplateCount
      tags:
        - Form Templates
      summary: Return the count of formtemplate available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of formtemplate
            corresponding to the queries parameters
          schema:
            type: number
  /formtemplates:
    get:
      operationId: getFormtemplate
      tags:
        - Form Templates
      summary: Return the list of formtemplate available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of formtemplate
            corresponding to the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/FormTemplate'
    post:
      operationId: postFormtemplate
      tags:
        - Form Templates
      summary: To create new formtemplate in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of formtemplate to create through the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/FormTemplate'
      responses:
        '200':
          description: Successful operation to create new formtemplate array in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/FormTemplate'
    put:
      operationId: putFormtemplate
      tags:
        - Form Templates
      summary: To update formtemplate in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of formtemplate to update in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/FormTemplate'
      responses:
        '200':
          description: Successful operation to update array of formtemplate in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/FormTemplate'
    delete:
      operationId: deleteFormtemplate
      tags:
        - Form Templates
      summary: To delete items of formtemplate in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of formtemplate id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of formtemplate
            corresponding to ids in parameters are deleted from the cloud
          schema:
            type: string
            example: success
  /formtemplatesids:
    get:
      operationId: getFormtemplateIds
      tags:
        - Form Templates
      summary: >-
        Return the list of id corresponding to the formtemplate available to the
        current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of formtemplate
            corresponding to the queries parameters
          schema:
            type: array
            items:
              type: string
  /formsectionrulecount:
    get:
      operationId: getFormsectionruleCount
      tags:
        - Forms
      summary: Return the count of formsectionrule available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of formsectionrule
            corresponding to the queries parameters
          schema:
            type: number
  /formsectionrules:
    get:
      operationId: getFormsectionrule
      tags:
        - Forms
      summary: Return the list of formsectionrule available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of formsectionrule
            corresponding to the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/FormSectionRule'
    post:
      operationId: postFormsectionrule
      tags:
        - Forms
      summary: To create new formsectionrule in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of formsectionrule to create through the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/FormSectionRule'
      responses:
        '200':
          description: >-
            Successful operation to create new formsectionrule array in the
            cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/FormSectionRule'
    put:
      operationId: putFormsectionrule
      tags:
        - Forms
      summary: To update formsectionrule in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of formsectionrule to update in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/FormSectionRule'
      responses:
        '200':
          description: Successful operation to update array of formsectionrule in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/FormSectionRule'
    delete:
      operationId: deleteFormsectionrule
      tags:
        - Forms
      summary: To delete items of formsectionrule in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of formsectionrule id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of formsectionrule
            corresponding to ids in parameters are deleted from the cloud
          schema:
            type: string
            example: success
  /formsectionrulesids:
    get:
      operationId: getFormsectionruleIds
      tags:
        - Forms
      summary: >-
        Return the list of id corresponding to the formsectionrule available to
        the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of formsectionrule
            corresponding to the queries parameters
          schema:
            type: array
            items:
              type: string
  /formquestioncount:
    get:
      operationId: getFormquestionCount
      tags:
        - Form Templates
      summary: Return the count of formquestion available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the number of formquestion
            corresponding to the queries parameters
          schema:
            type: number
  /formquestions:
    get:
      operationId: getFormquestion
      tags:
        - Form Templates
      summary: Return the list of formquestion available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of formquestion
            corresponding to the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/FormQuestion'
    post:
      operationId: postFormquestion
      tags:
        - Form Templates
      summary: To create new formquestion in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of formquestion to create through the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/FormQuestion'
      responses:
        '200':
          description: Successful operation to create new formquestion array in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/FormQuestion'
    put:
      operationId: putFormquestion
      tags:
        - Form Templates
      summary: To update formquestion in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of formquestion to update in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/FormQuestion'
      responses:
        '200':
          description: Successful operation to update array of formquestion in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/FormQuestion'
    delete:
      operationId: deleteFormquestion
      tags:
        - Form Templates
      summary: To delete items of formquestion in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of formquestion id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of formquestion
            corresponding to ids in parameters are deleted from the cloud
          schema:
            type: string
            example: success
  /formquestionsids:
    get:
      operationId: getFormquestionIds
      tags:
        - Form Templates
      summary: >-
        Return the list of id corresponding to the formquestion available to the
        current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of id of formquestion
            corresponding to the queries parameters
          schema:
            type: array
            items:
              type: string
  /formfinalization:
    put:
      operationId: putFormFinalization
      tags:
        - Forms
      summary: Finalize a form
      parameters:
        - $ref: '#/parameters/versionParam'
        - in: body
          name: FormReportParams
          description: >-
            Basic definition of the report that will be generated after the
            finalization, if successful.
          schema:
            $ref: '#/definitions/FormReportParams'
      responses:
        '200':
          description: >-
            Successful operation. Return the form finalized and the
            ReportRequest identification
          schema:
            $ref: '#/definitions/FormFinalizationResponse'
  /generateformfromtemplates:
    get:
      operationId: getGenerateFormFromTemplates
      tags:
        - Forms
      summary: >-
        This method will generate an excel for forms based on template specified
        in parameters
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/formatParam'
        - $ref: '#/parameters/idsParam'
      description: >-
        the format parameter is required in this case and must be equals to
        "excel". The ids parameter must contains a list of ids of form template
        to be the base of the creation of form in an excel file
      responses:
        '200':
          description: >-
            Successful operation returning an generated excel file that contains
            the forms with all columns concerning form template prefilled with
            the one specified in parameters.
          schema:
            type: string
            format: binary
  /formsync:
    get:
      operationId: getFormSync
      tags:
        - Forms
      summary: >-
        Return the list of form created, deleted or added from a specific date
        if specified (The CRUD action can be on the entity himself or one of
        linked detail entity).  The collection returned contains all detail
        entities and contains also entities deleted
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/requestedBlockSizeParam'
        - $ref: '#/parameters/timestampParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of form for which a
            modification has been done from the specific date
          schema:
            type: array
            items:
              $ref: '#/definitions/Form'
  /formtemplatesync:
    get:
      operationId: getFormtemplateSync
      tags:
        - Form Templates
      summary: >-
        Return the list of formtemplate created, deleted or added from a
        specific date if specified (The CRUD action can be on the entity himself
        or one of linked detail entity).  The collection returned contains all
        detail entities and contains also entities deleted
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/requestedBlockSizeParam'
        - $ref: '#/parameters/timestampParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of formtemplate for which a
            modification has been done from the specific date
          schema:
            type: array
            items:
              $ref: '#/definitions/FormTemplate'
  /previewformreport:
    post:
      operationId: getPreviewFormReport
      tags:
        - Forms
      summary: To preview the form report
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: FormReportParams
          description: >-
            Basic definition of the report that will be generated after the
            finalization, if successful.
          schema:
            $ref: '#/definitions/FormReportParams'
      responses:
        '200':
          description: The report request is created with parameter
          schema:
            $ref: '#/definitions/ReportRestIdentification'
  /usercommentsids:
    get:
      operationId: getUserCommentIds
      tags:
        - Annotations
      summary: 'Return the list of ids corresponding to the search of Forms or Points. '
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: query
          name: notetypes
          type: string
          enum:
            - Note
            - Form
          required: true
          description: The type of object to retrieve - Point or Form
        - in: query
          name: groupby
          type: string
          enum:
            - None
            - Date
            - PunchListItem
            - Room
            - Status
            - DueDate
            - CodeNum
            - InCharge
            - IsArchived
            - Plan
          required: true
          description: >-
            To specify how data must be group. This is the first sort it will be
            applied
        - in: query
          name: projectid
          type: string
          description: To retrieve only points/forms of a specific project
        - in: query
          name: meeting
          type: string
          description: To retrieve only points/forms of a specific project
        - in: query
          name: planid
          type: string
          description: To retrieve only points/forms linked to a specific document
        - in: query
          name: parentnotebaseid
          type: string
          description: >-
            To retrieve only points/forms linked to a parent point/form
            corresponding to the id
        - in: query
          name: userisauthor
          type: boolean
          description: To retrieve only points/forms created by the user
        - in: query
          name: isarchived
          type: boolean
          description: >-
            to retrieve all points/forms no need to specify this parameter but
            if it is necessary to retrieve only archived or active items use
            this parameter
        - in: query
          name: isdone
          type: boolean
          description: >-
            if this parameter is defined, it is to filter on points where status
            is flagged as isdone or istodo
        - in: query
          name: IsNoneGroupLast
          type: boolean
          description: >-
            to specify that id of points/forms that are in the "none" must be
            placed at the end of the list and not at the beginning
        - in: query
          name: isurgent
          type: boolean
          description: to retrieve all points/forms flagged as urgent/important
        - in: query
          name: notebasetype
          type: string
          enum:
            - Note
            - Form
          description: >-
            to specify which kind of entity needs to be retrieved - Form or
            Point - by default, it is for point then, "Note"
      description: >-
        This method returns a list of ids of points or forms. The id returns can
        corresponds to different kind object. To know the kind of the object,
        the id must be decompose: 36 first characters is the id, the end part is
        to specify the kind of the object 
          * 0, -4: Id of NoteComment 
          * 1, -1: Id of Note/Form 
          * 2, -2: Id of NoteInCharge 
          * 3, -3: Id of NoteDocument 
          
          If the value is negative, it means the related point/form is archived
      responses:
        '200':
          description: >-
            Successful operation returning the array of id computed with the
            type of the object related to the id
          schema:
            type: array
            items:
              type: string
  /reportrequests:
    get:
      operationId: getReportrequest
      tags:
        - Reports
      summary: Return the list of reportrequest available to the current user
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/filterParam'
        - $ref: '#/parameters/pathtoloadParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of reportrequest
            corresponding to the queries parameters
          schema:
            type: array
            items:
              $ref: '#/definitions/ReportRequest'
    post:
      operationId: postReportrequest
      tags:
        - Reports
      summary: To create new reportrequest in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of reportrequest to create through the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/ReportRequest'
      responses:
        '200':
          description: Successful operation to create new reportrequest array in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/ReportRequest'
    put:
      operationId: putReportrequest
      tags:
        - Reports
      summary: To update reportrequest in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: This is the array of reportrequest to update in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/ReportRequest'
      responses:
        '200':
          description: Successful operation to update array of reportrequest in the cloud
          schema:
            type: array
            items:
              $ref: '#/definitions/ReportRequest'
    delete:
      operationId: deleteReportrequest
      tags:
        - Reports
      summary: To delete items of reportrequest in the cloud APROPLAN
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - in: body
          name: body
          description: Array of reportrequest id to delete from the cloud
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - ea5d793f-c795-4311-8344-eb18e8efa065
              - afff9354-abb3-4a9c-aca5-9810490938ef
      responses:
        '200':
          description: >-
            Successful operation meaning all specified items of reportrequest
            corresponding to ids in parameters are deleted from the cloud
          schema:
            type: string
            example: success
  /reportrequestsync:
    get:
      operationId: getReportrequestSync
      tags:
        - Reports
      summary: >-
        Return the list of reportrequest created, deleted or added from a
        specific date if specified (The CRUD action can be on the entity himself
        or one of linked detail entity).  The collection returned contains all
        detail entities and contains also entities deleted
      parameters:
        - $ref: '#/parameters/tokenParam'
        - $ref: '#/parameters/versionParam'
        - $ref: '#/parameters/requesterParam'
        - $ref: '#/parameters/dateFormatParam'
        - $ref: '#/parameters/requestedBlockSizeParam'
        - $ref: '#/parameters/timestampParam'
      description: ''
      responses:
        '200':
          description: >-
            Successful operation returning the array of reportrequest for which
            a modification has been done from the specific date
          schema:
            type: array
            items:
              $ref: '#/definitions/ReportRequest'
definitions:
  AliasPass:
    title: AliasPass
    type: object
    properties:
      Alias:
        type: string
        description: This is the alias used by the user to identify himself into APROPLAN
        example: john.smith@aproplan.com
      Pass:
        type: string
        description: This is the password of the user to log in to APROPLAN
        example: aproplan
  UserPass:
    title: UserPass
    type: object
    properties:
      User:
        $ref: '#/definitions/User'
      Pass:
        type: string
        description: this is the password to apply to the new user
        example: aproplan
  TokenInfo:
    title: TokenInfo
    type: object
    properties:
      Token:
        type: string
        description: Guid to identify the user. Received at the login
        pattern: '^{[A-Z0-9]{8}-([A-Z0-9]{4}-){3}[A-Z0-9]{12}}$'
        example: a75678b7-5042-484e-99aa-a029aebc98b4
      ValidityLimit:
        type: string
        format: date-time
        description: The end date-time when the token will be invalidate
        example: '2018-01-10T16:07:56.7509736Z'
      ValidityStart:
        type: string
        format: date-time
        description: The start date-time of the token validity
        example: '2018-01-10T15:57:56.7509736Z'
  RestEntity:
    title: RestEntity
    type: object
    required:
      - Id
      - EntityVersion
    properties:
      Id:
        type: string
        description: Guid identifier
        pattern: '^{[A-Z0-9]{8}-([A-Z0-9]{4}-){3}[A-Z0-9]{12}}$'
        example: f230aeb4-7d72-435b-8e12-b9240156e098
      EntityVersion:
        type: integer
        format: int64
      EntityCreationUser:
        type: string
        description: Guid identifier
        pattern: '^{[A-Z0-9]{8}-([A-Z0-9]{4}-){3}[A-Z0-9]{12}}$'
  Language:
    type: object
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: Language
      - properties:
          Code:
            type: string
            description: This is the code of the language ISO2
            example: fr
          Name:
            type: string
            description: This is the name of the language in English
            example: French
          TranslationCode:
            type: string
            description: This is the localization of the language
            example: FR
          TranslatedName:
            type: string
            description: This is the name of the language in translated in this language
            example: Français
  Country:
    type: object
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: Country
      - properties:
          Name:
            type: string
            description: this is the name of the country
            example: Belgium
          Iso:
            type: string
            description: this is the iso of the country in 3 characters
            example: BEL
          Iso2:
            type: string
            description: this is the iso of the country in 2 characters
            example: BE
  Profession:
    type: object
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: Profession
      - properties:
          Code:
            type: string
          Name:
            type: string
  Phone:
    type: object
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: Phone
      - properties:
          Number:
            type: string
          Order:
            type: string
          InfoType:
            type: string
            enum:
              - Home
              - Home2
              - Business
              - Business2
              - Mobile
              - Other
  Email:
    type: object
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: Email
      - properties:
          Email:
            type: string
          Order:
            type: string
          InfoType:
            type: string
            enum:
              - Home
              - Home2
              - Business
              - Business2
              - Mobile
              - Other
  AccessRightBase:
    type: object
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: AccessRightBase
      - properties:
          CanEdit:
            type: boolean
            description: To know if the user can edit the object
          Level:
            type: string
            enum:
              - Admin
              - Manager
              - Contributor
              - Guest
              - Subcontractor
            description: This is the level of the access right of the user
            example: Admin
          Iso2:
            type: string
            description: this is the iso of the country in 2 characters
            example: BE
  Party:
    type: object
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: Party
      - properties:
          Code:
            type: string
          Name:
            type: string
          Language:
            $ref: '#/definitions/Language'
          LanguageCode:
            type: string
          Country:
            $ref: '#/definitions/Country'
          Email:
            type: string
          Phones:
            type: array
            items:
              $ref: '#/definitions/Phone'
          Emails:
            type: array
            items:
              $ref: '#/definitions/Email'
  Person:
    type: object
    allOf:
      - $ref: '#/definitions/Party'
      - type: object
      - title: Person
      - properties:
          SpellCheckLanguage:
            $ref: '#/definitions/Language'
  CompanyUserInvitationRequest:
    type: object
    allOf:
      - $ref: '#/definitions/RestEntity'
      - title: CompanyUserInvitationRequest
      - type: object
      - properties:
          Status:
            type: string
            enum:
              - Sent
              - Accepted
              - Refused
              - Cancelled
          Company:
            $ref: '#/definitions/ManagedCompany'
          InvitedUser:
            $ref: '#/definitions/User'
          Inviter:
            $ref: '#/definitions/User'
          StatusChangedDate:
            type: string
            format: date-time
  CompanyUser:
    type: object
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: CompanyUser
      - properties:
          IsOwner:
            type: boolean
          IsManager:
            type: boolean
          Company:
            $ref: '#/definitions/ManagedCompany'
          CompanyUserInvitationRequests:
            type: array
            items:
              - $ref: '#/definitions/CompanyUserInvitationRequest'
  ManagedCompany:
    type: object
    allOf:
      - $ref: '#/definitions/Party'
      - type: object
      - title: ManagedCompany
      - properties:
          CompanyOwner:
            $ref: '#/definitions/User'
          CompanyUsers:
            type: array
            items:
              $ref: '#/definitions/CompanyUser'
  User:
    type: object
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: User
      - properties:
          Alias:
            type: string
            description: >-
              This is the alias to use by the user to log in to the APROPLAN
              application
            example: john.smith@aproplan.com
          DisplayName:
            type: string
            example: John Smith
          TimeZoneName:
            type: string
            example: Jordan Standard Time
          DefaultEmail:
            type: string
            example: john.smith@aproplan.com
          LanguageCode:
            type: string
            example: en
          Person:
            $ref: '#/definitions/Person'
          Company:
            $ref: '#/definitions/ManagedCompany'
          LogoUrl:
            type: string
          Profession:
            $ref: '#/definitions/Profession'
          IsDailyMailReceiver:
            type: boolean
          LocalTimeToSendDailyMail:
            type: string
            format: date-time
          CompanyName:
            type: string
          Role:
            type: string
          Street:
            type: string
          Zip:
            type: string
          City:
            type: string
          IsDailyMyTasksReceiver:
            type: boolean
          LocalTimeToSendDailyMyTasks:
            type: string
            format: date-time
          AllowSync:
            type: boolean
          ActivationDate:
            type: string
            format: date-time
          MustChangePassword:
            type: boolean
          AvatarFileName:
            type: string
  Project:
    type: object
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: Project
      - properties:
          Code:
            type: string
            description: This is the code of the project
            example: MyP
          Name:
            type: string
            description: This is the name of the project
            example: My Project
          Address:
            type: string
          City:
            type: string
          ZipCode:
            type: string
          Country:
            $ref: '#/definitions/Country'
          IsActive:
            type: boolean
            description: >-
              To know if the project is active or not. Nothing can be done on
              project inactive
          LogoUrl:
            type: string
            description: This the url to display the logo of the project
          Creator:
            $ref: '#/definitions/User'
          StartDate:
            type: string
            format: date-time
          EndDate:
            type: string
            format: date-time
          UserAccessRight:
            $ref: '#/definitions/ProjectAccessRight'
          Folders:
            type: array
            items:
              $ref: '#/definitions/Folder'
          Contacts:
            type: array
            items:
              $ref: '#/definitions/ContactDetails'
          Cells:
            type: array
            items:
              $ref: '#/definitions/ParentCell'
          Chapters:
            type: array
            items:
              $ref: '#/definitions/Chapter'
          NoteStatus:
            type: array
            items:
              $ref: '#/definitions/NoteProjectStatus'
          Visibilities:
            type: array
            items:
              $ref: '#/definitions/ProjectVisibility'
          NotesNumber:
            type: number
            description: >-
              this is a calculated property then, it is necessary to specify it
              in the pathtoload to have a good value on it
          DocumentsNumber:
            type: number
            description: >-
              this is a calculated property then, it is necessary to specify it
              in the pathtoload to have a good value on it
          ParticipantsNumber:
            type: number
            description: >-
              this is a calculated property then, it is necessary to specify it
              in the pathtoload to have a good value on it
          NewFormatPictureName:
            type: boolean
            description: >-
              this is to specify if the project need to make the new
              numerotation for document and photo uploaded on it.
  ProjectVisibility:
    type: object
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: ProjectVisibility
      - properties:
          InvitedUserId:
            type: string
            description: this is the id of the user having the visibility on a folder
          InviterUserId:
            type: string
            description: this is the id of the user who grant the visibility to another
          IsCreator:
            type: boolean
            description: >-
              this flag is set to true when the visibility has been granted to a
              user because he created the folder
          ProjectId:
            type: string
  ProjectAccessRight:
    type: object
    allOf:
      - $ref: '#/definitions/AccessRightBase'
      - type: object
      - title: ProjectAccessRight
      - properties:
          CanConfig:
            type: boolean
            description: To know if the user can configure the project
          CanAddFolder:
            type: boolean
            description: To know if the user can add folder in the project
          CanUploadDoc:
            type: boolean
            description: To know if the user can upload document in the project
          CanDownloadDoc:
            type: boolean
            description: To know if the user can download doc from the project
          CanArchiveDoc:
            type: boolean
            description: To know if the user can archive doc of the project
          CanDeleteFolder:
            type: boolean
            description: >-
              To know if the user can delete folder of the project created by
              himself
          CanEditFolder:
            type: boolean
            description: >-
              To know if the user can edit a folder in the project created by
              himself
          CanEditAllFolder:
            type: boolean
            description: >-
              To know if the user can edit a folder even if he does not create
              the folder himself
          CanEditDoc:
            type: boolean
            description: To know if the user can edit a document uploaded by himself
          CanDeleteDoc:
            type: boolean
            description: To know if the user can delete a document uploaded by himself
          CanEditAllDoc:
            type: boolean
            description: >-
              To know if the user can edit a document even if he does not
              uploaded the document himself
          CanAddMeeting:
            type: boolean
            description: To know if the user can create a list in the project
          CanEditAllList:
            type: boolean
            description: >-
              To know if the user can edit a list even if he does not create the
              list himself
          CanAddVersion:
            type: boolean
            description: >-
              To know if the user can upload a new version on a document he
              uploaded
          CanDeleteVersion:
            type: boolean
            description: >-
              To know if the user can delete a version of a document he uploaded
              himself
          CanMoveDoc:
            type: boolean
            description: >-
              To know if the user can move a document to another folder of the
              project
          CanEditContact:
            type: boolean
            description: To know if the user can edit a participant of the project
          CanRemoveContact:
            type: boolean
            description: >-
              To know if the user can remove a participant he created himself of
              the project
          CanEditAllContact:
            type: boolean
            description: >-
              To know if the user can edit a participant even he does added this
              participant himself
  Folder:
    type: object
    allOf:
      - $ref: '#/definitions/Folder'
      - type: object
      - title: Folder
      - properties:
          Project:
            $ref: '#/definitions/Project'
          FolderType:
            type: string
            description: >-
              to specify the kind of the folder. To differentiate the one create
              by the user than the one creatd by the system.
            enum:
              - Custom
              - Photo
              - Report
          DisplayOrder:
            type: number
            description: to know in which order the folder must be displayed
          IsPublic:
            type: boolean
            description: >-
              to know if the folder is public to all participants of the project
              or not
          PlanNumber:
            type: number
            description: >-
              this is a calculated property then, it is necessary to specify it
              in the pathtoload to have a good value on it
          Children:
            type: array
            items:
              $ref: '#/definitions/Folder'
  FolderVisibility:
    type: object
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: FolderVisibility
      - properties:
          InvitedUserId:
            type: string
            description: this is the id of the user having the visibility on a folder
          InviterUserId:
            type: string
            description: this is the id of the user who grant the visibility to another
          IsCreator:
            type: boolean
            description: >-
              this flag is set to true when the visibility has been granted to a
              user because he created the folder
          FolderId:
            type: string
  ChapterBase:
    description: this is the base class to define category structure
    type: object
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: ChapterBase
      - properties:
          Code:
            type: string
          Description:
            type: string
  Chapter:
    description: To represent category level 1
    type: object
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: Chapter
      - properties:
          DisplayOrder:
            type: number
          IsDisabled:
            type: boolean
          ProjectId:
            type: string
          IssueTypes:
            type: array
            items:
              $ref: '#/definitions/IssueType'
  IssueTypeBase:
    description: this is the base class to define subcategory
    type: object
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: IssueTypeBase
      - properties:
          Code:
            type: string
          Description:
            type: string
  IssueType:
    description: to represent subcategory (category level 2)
    type: object
    allOf:
      - $ref: '#/definitions/IssueTypeBase'
      - type: object
      - title: IssueType
      - properties:
          DisplayOrder:
            type: number
          ParentChapter:
            $ref: '#/definitions/Chapter'
          NoteSubjects:
            type: array
            items:
              $ref: '#/definitions/IssueTypeNoteSubject'
          HasDefaultNoteSubjects:
            type: boolean
            description: to know if the subcategory contains some default subjectsnumber
          IsDisabled:
            type: boolean
            description: to know if the subcategory can be used or not
          ContactIssueTypeLinks:
            type: array
            items:
              $ref: '#/definitions/ContactIssueType'
  IssueTypeNoteSubjectBase:
    description: this is the base class to define default subject of a subcategory
    type: object
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: IssueTypeNoteSubjectBase
      - properties:
          Subject:
            type: string
          DefaultDescription:
            type: string
          DisplayOrder:
            type: number
  IssueTypeNoteSubject:
    description: this is the base class to define default subject of a subcategory
    type: object
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: IssueTypeNoteSubjectBase
      - properties:
          IssueType:
            $ref: '#/definitions/IssueType'
            description: >-
              the parent subcategory for which a default subject/description is
              defined
  CellBase:
    description: this is the base class to define rooms
    type: object
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: CellBase
      - properties:
          Code:
            type: string
          Description:
            type: string
          DisplayOrder:
            type: number
          IsDisabled:
            type: boolean
  ParentCell:
    description: to represent the first level of room
    type: object
    allOf:
      - $ref: '#/definitions/CellBase'
      - type: object
      - title: ParentCell
      - properties:
          ProjectId:
            type: string
          SubCells:
            type: array
            items:
              $ref: '#/definitions/SubCell'
  SubCell:
    description: to represent the first level of room
    type: object
    allOf:
      - $ref: '#/definitions/CellBase'
      - type: object
      - title: ParentCell
      - properties:
          ParentCell:
            $ref: '#/definitions/ParentCell'
  NoteProjectStatusBase:
    type: object
    description: ''
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: NoteProjectStatusBase
      - properties:
          Code:
            type: string
          Name:
            type: string
          DisplayOrder:
            type: integer
          IsOnlyUsedByMeetingManager:
            type: boolean
          Color:
            type: string
          IsTodo:
            type: boolean
          IsDone:
            type: boolean
          DoneAction:
            type: boolean
          IsBlocked:
            type: boolean
          IsBlockedAction:
            type: boolean
  NoteProjectStatus:
    type: object
    description: ''
    allOf:
      - $ref: '#/definitions/NoteProjectStatusBase'
      - type: object
      - title: NoteProjectStatus
      - properties:
          Project:
            $ref: '#/definitions/Project'
          IsDisabled:
            type: boolean
  ContactDetails:
    description: to represent participant of a project
    type: object
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: ContactDetails
      - properties:
          User:
            $ref: '#/definitions/User'
            description: this is the user defined as participant of the project
          ProjectId:
            type: string
            description: This is the id of the project for which the user is participants
          Project:
            $ref: '#/definitions/Project'
          DisplayName:
            type: string
            description: >-
              This is the name we want to see when we use this participant
              through the project
            example: AP - John Smith
          City:
            type: string
          Phone:
            type: string
          Street:
            type: string
          Zip:
            type: string
          Vat:
            type: string
          Company:
            type: string
            example: APROPLAN
            description: >-
              A freetext to assign a company name to a participant then, when we
              assign an annotation to somebody, we can also specify a company
              name.  In that case, all participants with the same role will see
              the annotation as assign to him
          Role:
            type: string
            example: Architect
            description: >-
              A freetext to specify a role to a participant then, when we assign
              an annotation to somebody, we can also specify a role.  In that
              case, all participants with the same role will see the annotation
              as assign to him
          LinkedIssueTypes:
            type: array
            description: >-
              This is the list of subcategories linked to the participants of
              the project.
            items:
              $ref: '#/definitions/ContactIssueType'
          AccessRightLevel:
            type: string
            enum:
              - Admin
              - Manager
              - Contributor
              - Guest
            description: >-
              this is the level of access right of the participant in the
              project
          IsInvited:
            type: boolean
            example: Specify if the user can see or not the project through APROPLAN
  ContactIssueType:
    description: >-
      To represent the relation between a subcategory and a participant of a
      project
    type: object
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: ContactIssueType
      - properties:
          ContactId:
            type: string
            description: >-
              the id of the contact on which the subcategory is linked
              (ContactDetails)
          IssueTypeId:
            type: string
            description: >-
              the id of the subcategory on which the contact is linked
              (IssueType)
          IssueType:
            $ref: '#/definitions/IssueType'
  SheetBase:
    type: object
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: SheetBase
      - properties:
          Width:
            type: integer
            description: This is the width of the sheet
            example: 800
          Height:
            type: integer
            description: This is the height of the sheet
            example: 600
          ZoomLevelNumber:
            type: integer
          TileSize:
            type: integer
          BigThumbWidth:
            type: integer
          BigThumbHeight:
            type: integer
          SmallThumbWidth:
            type: integer
          SmallThumbHeight:
            type: integer
  DocumentBase:
    type: object
    allOf:
      - $ref: '#/definitions/SheetBase'
      - type: object
      - title: DocumentBase
      - properties:
          ImageUrl:
            type: string
          SourceUrl:
            type: string
          Date:
            type: string
            format: date-time
          UploadedBy:
            $ref: '#/definitions/User'
          UploadedDate:
            type: string
            format: date-time
          Subject:
            type: string
          RotateAngle:
            type: integer
  Document:
    type: object
    allOf:
      - $ref: '#/definitions/DocumentBase'
      - type: object
      - title: Document
      - properties:
          FolderId:
            type: string
          Name:
            type: string
          PageCount:
            type: integer
          HasDifference:
            type: boolean
          IsArchived:
            type: boolean
          Status:
            type: string
            description: to know what is the status of the working file of the document
            enum:
              - NotUploaded
              - Uploaded
              - Processed
          SourceFileStatus:
            type: string
            description: to know what is the status of the source file of the document
            enum:
              - NotUploaded
              - Uploaded
              - Processed
          FolderPath:
            type: string
          IsReport:
            type: boolean
            description: >-
              specify if the document was generated by Aproplan from a report
              request
          ProcessingStatus:
            type: string
            enum:
              - Unknown
              - ToUpload
              - UploadFailed
              - ToGenerateReport
              - GeneratingReport
              - GenerationReportFailed
              - ToGenerateTiles
              - TilesProcessing
              - TilesProcessingFailed
              - FullyCompleted
              - ToGenerateCacheFile
              - GenerateCacheFileError
          NumPageProcessing:
            type: number
            description: >-
              If the processing status is GeneratingReport or TilesProcessing,
              this property specify number of page under process.
          ProjectNumSeq:
            type: number
            description: >-
              this is the sequential number of the document in the project if
              this options is activated at project level
  Version:
    type: object
    allOf:
      - $ref: '#/definitions/Version'
      - type: object
      - title: Version
      - properties:
          DocumentId:
            type: string
          VersionIndex:
            type: number
          PhysicalFolderId:
            type: string
          PageNbr:
            type: number
  Meeting:
    type: object
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: Meeting
      - properties:
          Title:
            type: string
            description: ''
            example: My list
          Code:
            type: string
            description: ''
            example: MyL
          Comment:
            type: string
          Building:
            type: string
          Floor:
            type: string
          Date:
            type: string
            format: date-time
          Project:
            $ref: '#/definitions/Project'
          Occurrence:
            type: number
          IsArchived:
            type: boolean
          Type:
            type: string
            enum:
              - Meeting
              - Handover
              - Security
          NumberingType:
            type: string
            enum:
              - Sequential
              - OccSequential
              - CodeSequential
              - CodeOccSequential
          Header:
            type: string
          Footer:
            type: string
          Remarks:
            type: string
          IsPublic:
            type: boolean
          IsSystem:
            type: boolean
            description: >-
              to know if the list is one created by the system (private or
              public list)
          UserAccessRight:
            $ref: '#/definitions/MeetingAccessRight'
          MeetingAuthor:
            $ref: '#/definitions/User'
          LinkedNotes:
            type: array
            items:
              $ref: '#/definitions/Note'
          MeetingConcerns:
            type: array
            items:
              $ref: '#/definitions/MeetingConcern'
          MeetingDocuments:
            type: array
            items:
              $ref: '#/definitions/MeetingDocument'
          TransferredDocuments:
            type: array
            items:
              $ref: '#/definitions/MeetingTransferredDocs'
          MeetingReport:
            type: array
            items:
              $ref: '#/definitions/MeetingReport'
  MeetingAccessRight:
    type: object
    allOf:
      - $ref: '#/definitions/AccessRightBase'
      - type: object
      - title: MeetingAccessRight
      - properties:
          CanAddPoint:
            type: boolean
            description: Specify if the participant of the list can add point in the list
          CanEditPoint:
            type: boolean
            description: >-
              Specify if the participant of the list can edit a point he created
              himself
          CanDeletePoint:
            type: boolean
            description: >-
              Specify if the participant of the list can delete a point he
              created himself
          CanEditPointStatus:
            type: boolean
            description: >-
              Specify if the participant of the list can edit the status of a
              point even he cannot edit it
          CanEditPointIssueType:
            type: boolean
            description: >-
              Specify if the participant of the list can edit the subcategory of
              a point even he cannot edit it
          CanEditPointInCharge:
            type: boolean
            description: >-
              Specify if the participant of the list can edit user in charge
              list of a point even he cannot edit it
          CanAddComment:
            type: boolean
            description: >-
              Specify if the participant of the list can add a comment on a
              point
          CanDeleteComment:
            type: boolean
            description: >-
              Specify if the participant of the list can delete a comment of a
              point
          CanArchiveComment:
            type: boolean
            description: >-
              Specify if the participant of the list can archive a comment of a
              point
          CanAddDoc:
            type: boolean
            description: >-
              Specify if the participant of the list can attach document to the
              list
          CanGenerateReport:
            type: boolean
            description: >-
              Specify if the participant of the list can generate the report of
              the list
          CanCreateNextMeeting:
            type: boolean
            description: >-
              Specify if the participant of the list can create a new occurrence
              of the list
          CanEditAllPoint:
            type: boolean
            description: >-
              Specify if the participant of the list can edit a point of the
              list even he did not create himself
          CanViewOnlyPointInCharge:
            type: boolean
            description: >-
              Specify if the participant of the list can only see the point of
              the list where he specified as user in charge
          CanAddPointDocument:
            type: boolean
            description: >-
              Specify if the participant of the list can add attchment to a
              point of the list
          CanDeletePointDocument:
            type: boolean
            description: >-
              Specify if the participant of the list can detach a document of a
              list' s point
          CanViewDashboard:
            type: boolean
            description: >-
              Specify if the participant of the list can see a dashboard at list
              level
          CanViewParticipant:
            type: boolean
            description: >-
              Specify if the participant of the list can see the list of
              participants of the list
  MeetingConcern:
    type: object
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: MeetingConcern
      - properties:
          User:
            $ref: '#/definitions/User'
            description: This is the user specified as participants of the list
          PresenceStatus:
            type: string
            description: To specify a status of the presence of the participants
            enum:
              - Present
              - Absent
              - Excused
          Meeting:
            $ref: '#/definitions/Meeting'
          IsReport:
            type: boolean
          IsOwner:
            type: boolean
            description: To know if the participant is the one who created the list
          IsInvited:
            type: boolean
          Signature:
            type: string
          SignatureDate:
            type: string
            format: date-time
          DisplayOrder:
            type: number
          Miscellaneous:
            type: string
          IsDisabled:
            type: boolean
            description: To know if the participant is still active or not in the list
          ContactDetails:
            $ref: '#/definitions/ContactDetails'
            description: >-
              This is the link to the same user as the participant at project
              level
          IsInvitedOnProject:
            type: boolean
            description: >-
              To know if the participant has been really invited at project
              level
          AccessRightLevel:
            description: To specify the access right level of the participant in the list
            type: string
            enum:
              - Admin
              - Manager
              - Contributor
              - Guest
              - Subcontractor
  MeetingDocument:
    type: object
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: MeetingDocument
      - properties:
          Meeting:
            $ref: '#/definitions/Meeting'
          Document:
            $ref: '#/definitions/Document'
          Project:
            $ref: '#/definitions/Project'
          DisplayOrder:
            type: number
  MeetingTransferredDocs:
    type: object
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: MeetingTransferredDocs
      - properties:
          Meeting:
            $ref: '#/definitions/Meeting'
          UsersTo:
            type: array
            items:
              $ref: '#/definitions/MeetingTransferredDocsTo'
          Name:
            type: string
          Approved:
            type: string
          From:
            $ref: '#/definitions/User'
          FromTag:
            type: string
  MeetingTransferredDocsTo:
    type: object
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: MeetingTransferredDocsTo
      - properties:
          MeetingTransferredDocs:
            $ref: '#/definitions/MeetingTransferredDocs'
          UserId:
            $ref: '#/definitions/User'
          Tag:
            type: string
  MeetingReport:
    type: object
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: MeetingReport
      - properties:
          Meeting:
            $ref: '#/definitions/Meeting'
          Document:
            $ref: '#/definitions/Document'
            description: >-
              this is the document representing the report generated for the
              list
          VersionId:
            type: string
            description: this is the version id of the report generated
          Occurrence:
            type: number
            description: This is the occurrence number when the report has been requested
          SentDate:
            type: string
            format: date-time
  NoteComment:
    type: object
    description: To make comment on annotation
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: NoteComment
      - required:
          - NoteBaseId
      - properties:
          NoteBaseId:
            type: string
            description: This is the id of the Note on which the comment is linked
          From:
            description: >-
              This is the creator of the comment. This parameter is not used
              from the api
            $ref: '#/definitions/User'
          Date:
            type: string
            description: This is the creation date of the annotation
            format: date-time
          LastModificationDate:
            type: string
            description: This is the last modification date of the comment
            format: date-time
          IsRead:
            type: boolean
            example: true
          IsFirst:
            type: boolean
            example: false
          IsArchived:
            type: boolean
            example: false
          Code:
            type: string
          MeetingOccurrence:
            type: integer
          MeetingRevision:
            type: integer
          MeetingPointNumber:
            type: string
          FormItemId:
            type: string
            description: >-
              If the comment is linked to a form, it can be also linked to a
              specific answer. This is the id of the form item
  NoteDocument:
    type: object
    description: To attach document on annotation
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: NoteDocument
      - required:
          - NoteBaseId
      - properties:
          NoteBaseId:
            type: string
            description: This is the id of the Note on which the document is linked
          DisplayOrder:
            type: integer
          FormItemId:
            type: string
            description: >-
              If the attachment is linked to a form, it can be also linked to a
              specific answer. This is the id of the form item
  NoteInCharge:
    type: object
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: NoteInCharge
      - required:
          - Tag
          - UserId
          - NoteBaseId
      - properties:
          NoteBaseId:
            type: string
            description: This is the id of the Note on which the document is linked
          UserId:
            type: string
          Tag:
            type: string
          IsContactInvitedOnProject:
            type: boolean
  NoteBase:
    type: object
    description: >-
      This is the base classes used for all kind of annotations available on
      APROPLAN
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: NoteBase
      - properties:
          Meeting:
            $ref: '#/definitions/Meeting'
            description: This is the meeting on which the annotation is linked
          Project:
            $ref: '#/definitions/Project'
            description: This is the project on which the annotation is linked
          ParentNote:
            description: >-
              An annotation can from/to be linked to another annotation. This is
              the parent annotation
            $ref: '#/definitions/NoteBase'
          ChildrenNotes:
            type: array
            items:
              $ref: '#/definitions/NoteBase'
          IsUrgent:
            type: boolean
            example: true
          CodeNum:
            type: string
            example: '1.05'
          Date:
            type: string
            description: This is the creation date of the annotation
            format: date-time
          ModificationDate:
            type: string
            format: date-time
          From:
            description: >-
              This is the creator of the annotation. This parameter is not used
              from the api
            $ref: '#/definitions/User'
          Subject:
            type: string
            description: This is the summary of the annotation
            example: My first annotation
          IsArchived:
            type: boolean
            description: 'To know if the annotation is archived or not '
            example: false
          ArchivedDate:
            type: string
            format: date-time
            description: To know when the annotation was archived the last time
          DueDate:
            type: string
            format: date-time
            description: >-
              This is the due date for which an action is expected for the
              annotation
          HasAttachment:
            type: boolean
            description: To know if there are some attachment linked to the annotation
          Comments:
            type: array
            items:
              $ref: '#/definitions/NoteComment'
          NoteDocuments:
            type: array
            items:
              $ref: '#/definitions/NoteDocument'
          NoteInCharge:
            type: array
            items:
              $ref: '#/definitions/NoteInCharge'
  Note:
    type: object
    description: This is the definition of an annotation
    allOf:
      - $ref: '#/definitions/NoteBase'
      - type: object
      - title: Note
      - properties:
          FormItemId:
            type: string
            format: guid
            description: >-
              If the note was created for form, we can specify for which item
              the note was created
          Status:
            $ref: '#/definitions/NoteProjectStatus'
  Drawing:
    type: object
    description: >-
      This is the class that will contains the drawings done on a document with
      a point/form. A drawing is a collection of shape done on a specific page
      of the document
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: Drawing
      - properties:
          NoteCommentId:
            type: string
            description: This is the id of the comment on which the drawing is linked
          NoteDocumentId:
            type: string
            description: This is the document on which the drawing is done
          Left:
            type: number
          Top:
            type: number
          Width:
            type: number
          Height:
            type: number
          Scale:
            type: number
          RenderCenterX:
            type: number
          RenderCenterY:
            type: number
          PrintScale:
            type: number
          PrintRenderCenterX:
            type: number
          PrintRenderCenterY:
            type: number
          HasRectangle:
            type: boolean
          PageIndex:
            type: number
            description: to know on which page of the document the drawing is related
          DrawingShapesXml:
            type: string
            description: >-
              This is an xml representing all shapes of the drawing done on the
              document
  FormElementBase:
    type: object
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: FormElementBase
      - required:
          - Code
      - properties:
          Code:
            type: string
          DisplayOrder:
            type: integer
            format: int32
            description: This is the order of the item in the Form or Form template
            example: '0'
          Title:
            type: string
          Description:
            type: string
  FormSectionBase:
    type: object
    allOf:
      - $ref: '#/definitions/FormElementBase'
      - type: object
      - title: FormSectionBase
      - properties:
          ItemsCount:
            type: number
            description: Specify how many items are defined in the sections
  FormItemBase:
    type: object
    allOf:
      - $ref: '#/definitions/FormElementBase'
      - type: object
      - title: FormItemBase
      - properties:
          ItemType:
            type: string
            enum:
              - string
              - number
              - array
          Template:
            type: string
          ConformityRules:
            type: string
          AllowAttachPicture:
            type: boolean
            description: To know if the user can add attachment to his answer
          AllowAttachComment:
            type: boolean
            description: To know if the user can add comments to his answer
  Form:
    type: object
    description: This is a Form created from a FormTemplate
    allOf:
      - $ref: '#/definitions/NoteBase'
      - type: object
      - title: Form
      - properties:
          Type:
            type: string
            enum:
              - Quality
              - Security
              - Environment
          Language:
            $ref: '#/definitions/Language'
          Status:
            type: string
            enum:
              - Todo
              - InProgress
              - Done
          DoneDate:
            type: string
            format: date-time
            description: This is the date when the form has been finalized
          TemplateId:
            type: string
            description: >-
              This is the id of the template from where the form has been
              created
          MustDisplayElementsCode:
            type: boolean
            description: >-
              This is a parameter to know if the UI must display the code of
              element (item, section) or not
          Signatures:
            type: array
            items:
              - $ref: '#/definitions/FormSignature'
          Items:
            type: array
            items:
              - $ref: '#/definitions/FormItem'
          Sections:
            type: array
            items:
              - $ref: '#/definitions/FormSection'
          IsConform:
            type: boolean
          Report:
            $ref: '#/definitions/Document'
  FormSection:
    type: object
    allOf:
      - $ref: '#/definitions/FormSectionBase'
      - type: object
      - title: FormSection
      - properties:
          FormId:
            type: string
            description: This is the id of the form owner of the item
            example: f230aeb4-7d72-435b-8e12-b9240156e098
          SectionRuleId:
            type: string
            description: >-
              This is the id of the section rule from where the section has been
              created
  FormSignature:
    type: object
    description: This is the signature wanted for the Form
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: FormSignature
      - properties:
          FormId:
            type: number
            description: This is the id of the parent form
          SignatureRuleId:
            type: string
            description: >-
              This is the id of the signature rule from where the signature has
              been created
          Title:
            type: string
            description: This is the title to display for the signature
            example: User who fill the form
          Signature:
            type: string
            description: This is the list of point (coordinate) necessary to draw signature
            example: '62,75,54,71,52,71,51,71,50,71,50,70,52,62,62,48'
          Date:
            type: string
            format: date-time
            description: >-
              If a signature was done, this is the date time when the signature
              was done
          SignatureUser:
            $ref: '#/definitions/User'
  FormFinalizationResponse:
    type: object
    description: >-
      When a form is finalized, it contains information about the report request
      + the form with new status and data
    properties:
      Form:
        $ref: '#/definitions/Form'
      FormReportParams:
        $ref: '#/definitions/ReportRestIdentification'
  FormItem:
    type: object
    description: >-
      It is an item of a form, it means question with potential value given by a
      user
    allOf:
      - $ref: '#/definitions/FormItemBase'
      - type: object
      - title: FormItem
      - properties:
          FormId:
            type: string
            description: This is the id of the form owner of the item
            example: f230aeb4-7d72-435b-8e12-b9240156e098
          QuestionId:
            type: string
            description: >-
              This is the id of the question from where the item has been
              created
          SectionId:
            type: string
            description: This is the id of the section from where the item belongs to
          User:
            description: >-
              This is the user who answered to the question. This parameter is
              not used from the api
            $ref: '#/definitions/User'
          Value:
            description: This is the value answered by the user converted to string
            type: string
            example: Die hard 3
          NotApplicable:
            type: boolean
            example: true
            description: >-
              A question can be not applicable then, the user is able to answer
              by setting this value to true
          IsConform:
            type: boolean
            example: true
            description: >-
              When the answer is given and there are rule of conformity. This
              value is computed regarding the value and conformity rules
          NoteDocuments:
            type: array
            items:
              - $ref: '#/definitions/NoteDocument'
            description: This is the list of attachments added to the answer
  FormTemplate:
    type: object
    description: This is a template of Form
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: FormTemplate
      - properties:
          Subject:
            type: string
            description: This is the subject of the form
          Type:
            type: string
            enum:
              - Quality
              - Security
              - Environment
          Language:
            $ref: '#/definitions/Language'
          Creator:
            $ref: '#/definitions/User'
          Date:
            type: string
            format: date-time
          IsArchived:
            type: boolean
            description: To know if the template is archived or not
          ArchivedDate:
            type: string
            format: date-time
            description: This is the date time when the template was archived
          CompanyId:
            type: string
            description: This is the id of the company owner of the template
            example: 91cb89f2-79a0-415c-9f47-77f22193b420
          MustDisplayElementsCode:
            type: boolean
            description: >-
              This is a parameter to know if the UI must display the code of
              element (question, section rule) or not
          Questions:
            type: array
            items:
              $ref: '#/definitions/FormQuestion'
          SectionRules:
            type: array
            items:
              $ref: '#/definitions/FormSectionRule'
          SignatureRules:
            type: array
            items:
              $ref: '#/definitions/FormSignatureRule'
  FormSectionRule:
    type: object
    allOf:
      - $ref: '#/definitions/FormSectionBase'
      - type: object
      - title: FormSectionRule
      - properties:
          FormTemplateId:
            type: string
            description: this is the id of the FormTemplate owner of the section
            example: f230aeb4-7d72-435b-8e12-b9240156e098
  FormQuestion:
    description: To represent template for question in a form template
    type: object
    allOf:
      - $ref: '#/definitions/FormItemBase'
      - type: object
      - title: FormQuestion
      - properties:
          FormTemplateId:
            type: string
            description: this is the id of the FormTemplate owner of the question
            example: f230aeb4-7d72-435b-8e12-b9240156e098
          SectionRuleId:
            type: string
            description: this is the id of the SectionRule where the question is placed
            example: C63D8A4E-2960-4CCC-8F88-9F591814C079
          IsArchived:
            type: boolean
            description: To know if the question has been archived or not
          ArchivedDate:
            type: string
            format: date-time
            description: >-
              If the question is archived, this is the date when the archive has
              been done
  FormSignatureRule:
    type: object
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: FormSignatureRule
      - properties:
          Title:
            type: string
            description: this is the title to display for the wanted signature
            example: User who fill the form
          FormTemplateId:
            type: number
            description: This is the id of the parent template
          IsArchived:
            type: boolean
            description: To know if the question has been archived or not
          ArchivedDate:
            type: string
            format: date-time
            description: >-
              If the question is archived, this is the date when the archive has
              been done
  ReportRequest:
    type: object
    allOf:
      - $ref: '#/definitions/RestEntity'
      - type: object
      - title: ReportRequest
      - properties:
          DocumentId:
            type: string
            description: This is the id of the document created from the report request
          ReportTitle:
            type: string
            description: This is the title to give to the report to generate
          Status:
            type: string
            enum:
              - New
              - InProgress
              - Generated
              - Error
              - Deleted
              - ToGenerateCacheFile
              - GenerateCacheFileError
          Date:
            type: string
            format: date-time
            description: date of the report request
  ReportRestIdentification:
    type: object
    description: Information returned by the server about the requested report
    properties:
      Date:
        type: string
        format: date-time
      GuidId:
        type: string
        description: The Id of the request report
        pattern: '^{[A-Z0-9]{8}-([A-Z0-9]{4}-){3}[A-Z0-9]{12}}$'
        example: f230aeb4-7d72-435b-8e12-b9240156e098
      NumberRecipients:
        type: integer
        description: The amount of recipients to whom the report will be sent
      ReportTitle:
        type: string
        description: The title of the report
      PreviewUri:
        type: string
        description: The URI where it is possible to preview the report
      Status:
        type: string
        description: The status of the requested report
  FormReportParams:
    type: object
    required:
      - FormId
    properties:
      FormId:
        type: string
        format: guid
        description: The Guid of the form that needs to be generated
        pattern: '^{[A-Z0-9]{8}-([A-Z0-9]{4}-){3}[A-Z0-9]{12}}$'
        example: f230aeb4-7d72-435b-8e12-b9240156e098
      ReportRequestId:
        type: string
        format: guid
        description: The Guid of the report request
        pattern: '^{[A-Z0-9]{8}-([A-Z0-9]{4}-){3}[A-Z0-9]{12}}$'
        example: de9590b5-14f2-4a07-8877-aad9e4b338e6
      LanguageCode:
        type: string
        description: The language in which the report will be generated
        example: EN
      Date:
        type: string
        format: date-time
        description: The report generation date
      PreviewUri:
        type: string
        description: >-
          This is the url to use to get the preview of the generated report when
          ready
      ReportTitle:
        type: string
      SendByMail:
        type: boolean
        description: Should this report be sent by mail ?
      RecipientIds:
        type: array
        items:
          type: string
        description: The list of user's guids that want the email sent to them
      MailSubject:
        type: string
        description: The mail subject that will be sent
      MailBody:
        type: string
        description: The text to insert in the body of the mail that will be sent
      Status:
        type: string
        enum:
          - New
          - InProgress
          - Generated
          - Error
          - Deleted

